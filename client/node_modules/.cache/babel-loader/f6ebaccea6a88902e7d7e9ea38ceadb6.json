{"ast":null,"code":"import _readOnlyError from \"D:\\\\RazParent\\\\RazzlersGithub\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/readOnlyError\";\nimport _classCallCheck from \"D:\\\\RazParent\\\\RazzlersGithub\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\RazParent\\\\RazzlersGithub\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\RazParent\\\\RazzlersGithub\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\RazParent\\\\RazzlersGithub\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\RazParent\\\\RazzlersGithub\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\RazParent\\\\RazzlersGithub\\\\client\\\\src\\\\pages\\\\PlayVideo.js\";\nimport React from \"react\";\nimport '../style.css';\n\nvar PlayVideo =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PlayVideo, _React$Component);\n\n  function PlayVideo(props) {\n    var _this;\n\n    _classCallCheck(this, PlayVideo);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PlayVideo).call(this, props));\n    _this.state = {\n      isMovie: false,\n      id: 0\n    };\n    checkParams().then(function (json) {\n      _this.setState(json);\n    });\n    return _this;\n  }\n\n  _createClass(PlayVideo, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          isMovie = _this$state.isMovie,\n          id = _this$state.id; //const {name, description, rating, actors, release_year} = null;\n\n      if (id !== 0) {\n        // set constants here and use them for page info\n        getVideoInfo(isMovie, id);\n      }\n\n      var loc = \"\";\n\n      if (isMovie === \"true\") {\n        loc = (_readOnlyError(\"loc\"), \"//razzlers.me/assets/videos/movies/\" + id + \".mp4\");\n      } else {\n        loc = (_readOnlyError(\"loc\"), \"//razzlers.me/assets/videos/episodes/\" + id + \".mp4\");\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"centerText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"font\", {\n        color: \"white\",\n        size: \"50\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"Movie Title\")), React.createElement(\"video\", {\n        className: \"center\",\n        width: \"720\",\n        height: \"480\",\n        controls: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"source\", {\n        src: loc,\n        type: \"video/mp4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        className: \"centerText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"font\", {\n        color: \"white\",\n        size: \"20px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Rating; Movie Description cody like dick in and around his ass\")), React.createElement(\"p\", {\n        className: \"quarterLeft\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Previous Episode\")));\n    }\n  }]);\n\n  return PlayVideo;\n}(React.Component);\n\nfunction checkParams() {\n  return new Promise(function (resolve, reject) {\n    var url = window.location.href;\n    url = new URL(url);\n    var isMovie = url.searchParams.get(\"isMovie\");\n    var id = url.searchParams.get(\"id\");\n    resolve({\n      isMovie: isMovie,\n      id: id\n    });\n  });\n}\n\nfunction getVideoInfo(isMovie, id) {\n  return new Promise(function (resolve, reject) {\n    var data = '{\"isMovie\": \"' + isMovie + '\", \"id\": \"' + id + '\"}';\n    data = JSON.parse(data);\n    var transport = {\n      headers: {\n        'Content-Type': \"application/json\"\n      },\n      method: \"PUT\",\n      body: JSON.stringify(data)\n    };\n    var url = \"http://localhost:3001/api/getData/getVideoInfo\";\n    fetch(url, transport).then(function (result) {\n      return result.json();\n    }).then(function (json) {\n      console.log(json);\n      resolve(json);\n\n      if (1 === 1) {} else {\n        reject();\n      }\n    }).catch(function (err) {\n      throw new Error(err);\n    });\n  });\n}\n\nexport default PlayVideo;","map":{"version":3,"sources":["D:\\RazParent\\RazzlersGithub\\client\\src\\pages\\PlayVideo.js"],"names":["React","PlayVideo","props","state","isMovie","id","checkParams","then","json","setState","getVideoInfo","loc","Component","Promise","resolve","reject","url","window","location","href","URL","searchParams","get","data","JSON","parse","transport","headers","method","body","stringify","fetch","result","console","log","catch","err","Error"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;;IAEMC,S;;;;;AACJ,qBAAYC,KAAZ,EACA;AAAA;;AAAA;;AACE,mFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,KADE;AAEXC,MAAAA,EAAE,EAAE;AAFO,KAAb;AAIAC,IAAAA,WAAW,GAAGC,IAAd,CAAmB,UAAAC,IAAI,EAAI;AACzB,YAAKC,QAAL,CAAcD,IAAd;AACD,KAFD;AANF;AASC;;;;6BACQ;AAAA,wBACe,KAAKL,KADpB;AAAA,UACAC,OADA,eACAA,OADA;AAAA,UACSC,EADT,eACSA,EADT,EAEP;;AACA,UAAGA,EAAE,KAAK,CAAV,EACA;AACE;AACAK,QAAAA,YAAY,CAACN,OAAD,EAAUC,EAAV,CAAZ;AACD;;AACD,UAAMM,GAAG,GAAG,EAAZ;;AACA,UAAGP,OAAO,KAAK,MAAf,EACA;AACEO,QAAAA,GAAG,2BAAG,wCAAwCN,EAAxC,GAA6C,MAAhD,CAAH;AACD,OAHD,MAGO;AACLM,QAAAA,GAAG,2BAAG,0CAA0CN,EAA1C,GAA+C,MAAlD,CAAH;AACD;;AACD,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2B;AAAO,QAAA,KAAK,EAAE,OAAd;AAAsB,QAAA,IAAI,EAAG,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAA3B,CADF,EAGE;AAAO,QAAA,SAAS,EAAC,QAAjB;AAA0B,QAAA,KAAK,EAAC,KAAhC;AAAsC,QAAA,MAAM,EAAC,KAA7C;AAAqD,QAAA,QAAQ,MAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,GAAG,EAAEM,GAAb;AAAkB,QAAA,IAAI,EAAC,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAHF,EAME;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0B;AAAO,QAAA,KAAK,EAAE,OAAd;AAAsB,QAAA,IAAI,EAAG,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0EAA1B,CANF,EAOE;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2B;AAAQ,QAAA,SAAS,EAAE,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAA3B,CAPF,CADF;AAWD;;;;EAtCqBX,KAAK,CAACY,S;;AAyC9B,SAASN,WAAT,GACA;AACE,SAAO,IAAIO,OAAJ,CAAY,UAASC,OAAT,EAAkBC,MAAlB,EACnB;AACE,QAAIC,GAAG,GAAGC,MAAM,CAACC,QAAP,CAAgBC,IAA1B;AACAH,IAAAA,GAAG,GAAG,IAAII,GAAJ,CAAQJ,GAAR,CAAN;AACA,QAAIZ,OAAO,GAAGY,GAAG,CAACK,YAAJ,CAAiBC,GAAjB,CAAqB,SAArB,CAAd;AACA,QAAIjB,EAAE,GAAGW,GAAG,CAACK,YAAJ,CAAiBC,GAAjB,CAAqB,IAArB,CAAT;AACAR,IAAAA,OAAO,CAAC;AAACV,MAAAA,OAAO,EAAPA,OAAD;AAAUC,MAAAA,EAAE,EAAFA;AAAV,KAAD,CAAP;AACD,GAPM,CAAP;AAQD;;AACD,SAASK,YAAT,CAAsBN,OAAtB,EAA+BC,EAA/B,EACA;AACE,SAAO,IAAIQ,OAAJ,CAAY,UAASC,OAAT,EAAkBC,MAAlB,EACnB;AACE,QAAIQ,IAAI,GAAG,kBAAkBnB,OAAlB,GAA4B,YAA5B,GAA2CC,EAA3C,GAAgD,IAA3D;AACAkB,IAAAA,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWF,IAAX,CAAP;AACA,QAAIG,SAAS,GAAG;AACdC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OADK;AAIdC,MAAAA,MAAM,EAAE,KAJM;AAKdC,MAAAA,IAAI,EAAEL,IAAI,CAACM,SAAL,CAAeP,IAAf;AALQ,KAAhB;AAOA,QAAMP,GAAG,GAAG,gDAAZ;AACAe,IAAAA,KAAK,CAACf,GAAD,EAAMU,SAAN,CAAL,CAAsBnB,IAAtB,CAA2B,UAAAyB,MAAM;AAAA,aAAIA,MAAM,CAACxB,IAAP,EAAJ;AAAA,KAAjC,EAAoDD,IAApD,CAAyD,UAAAC,IAAI,EAAI;AAC/DyB,MAAAA,OAAO,CAACC,GAAR,CAAY1B,IAAZ;AACAM,MAAAA,OAAO,CAACN,IAAD,CAAP;;AACA,UAAG,MAAM,CAAT,EAAY,CAAE,CAAd,MAAoB;AAAEO,QAAAA,MAAM;AAAK;AAClC,KAJD,EAIGoB,KAJH,CAIS,UAAAC,GAAG,EAAI;AACd,YAAM,IAAIC,KAAJ,CAAUD,GAAV,CAAN;AACD,KAND;AAOD,GAnBM,CAAP;AAoBD;;AAED,eAAenC,SAAf","sourcesContent":["import React from \"react\";\r\nimport '../style.css';\r\n\r\nclass PlayVideo extends React.Component {\r\n  constructor(props)\r\n  {\r\n    super(props)\r\n    this.state = {\r\n      isMovie: false,\r\n      id: 0\r\n    }\r\n    checkParams().then(json => {\r\n      this.setState(json);\r\n    });\r\n  }\r\n  render() {\r\n    const {isMovie, id} = this.state;\r\n    //const {name, description, rating, actors, release_year} = null;\r\n    if(id !== 0)\r\n    {\r\n      // set constants here and use them for page info\r\n      getVideoInfo(isMovie, id);\r\n    }\r\n    const loc = \"\";\r\n    if(isMovie === \"true\")\r\n    {\r\n      loc = \"//razzlers.me/assets/videos/movies/\" + id + \".mp4\";\r\n    } else {\r\n      loc = \"//razzlers.me/assets/videos/episodes/\" + id + \".mp4\";\r\n    }\r\n    return (\r\n      <div>\r\n        <h2 className=\"centerText\"><font  color =\"white\" size = \"50\">Movie Title</font></h2>\r\n\r\n        <video className=\"center\" width=\"720\" height=\"480\"   controls>\r\n          <source src={loc} type=\"video/mp4\"/>\r\n        </video>\r\n        <p className=\"centerText\"><font  color =\"white\" size = \"20px\">Rating; Movie Description cody like dick in and around his ass</font></p>\r\n        <p className=\"quarterLeft\"><button className= \"button\">Previous Episode</button></p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction checkParams()\r\n{\r\n  return new Promise(function(resolve, reject)\r\n  {\r\n    var url = window.location.href;\r\n    url = new URL(url);\r\n    var isMovie = url.searchParams.get(\"isMovie\");\r\n    var id = url.searchParams.get(\"id\");\r\n    resolve({isMovie, id});\r\n  });\r\n}\r\nfunction getVideoInfo(isMovie, id)\r\n{\r\n  return new Promise(function(resolve, reject)\r\n  {\r\n    var data = '{\"isMovie\": \"' + isMovie + '\", \"id\": \"' + id + '\"}';\r\n    data = JSON.parse(data);\r\n    var transport = {\r\n      headers: {\r\n        'Content-Type': \"application/json\"\r\n      },\r\n      method: \"PUT\",\r\n      body: JSON.stringify(data)\r\n    };\r\n    const url = \"http://localhost:3001/api/getData/getVideoInfo\";\r\n    fetch(url, transport).then(result => result.json()).then(json => {\r\n      console.log(json);\r\n      resolve(json);\r\n      if(1 === 1) {} else { reject(); }\r\n    }).catch(err => {\r\n      throw new Error(err);\r\n    });\r\n  });\r\n}\r\n\r\nexport default PlayVideo\r\n"]},"metadata":{},"sourceType":"module"}