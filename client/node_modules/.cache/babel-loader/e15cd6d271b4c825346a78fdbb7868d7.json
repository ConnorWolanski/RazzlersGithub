{"ast":null,"code":"import _classCallCheck from \"D:\\\\RazParent\\\\RazzlersGithub\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\RazParent\\\\RazzlersGithub\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\RazParent\\\\RazzlersGithub\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\RazParent\\\\RazzlersGithub\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\RazParent\\\\RazzlersGithub\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\RazParent\\\\RazzlersGithub\\\\client\\\\src\\\\HTMLComponents\\\\FriendCard.js\";\nimport React from 'react';\nimport envelope from '../images/envelope.png';\n\nvar utilFunc = require('../Helpers/UtilityFunctions');\n\nvar FriendCard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FriendCard, _React$Component);\n\n  function FriendCard(props) {\n    var _this;\n\n    _classCallCheck(this, FriendCard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FriendCard).call(this, props));\n    _this.state = {\n      username: props,\n      isFriends: false\n    };\n    checkIfFriends(_this.props).then(function (boolFriend) {\n      _this.setState({\n        isFriends: boolFriend.areFriends\n      });\n    });\n    return _this;\n  }\n\n  _createClass(FriendCard, [{\n    key: \"render\",\n    value: function render() {\n      var username = this.props.username;\n      var areFriends = this.state.isFriends;\n      return React.createElement(\"div\", {\n        className: \"friendCard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"font\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, username), React.createElement(\"button\", {\n        className: \"addButton\",\n        hidden: areFriends,\n        onClick: function onClick() {\n          console.log(\"added\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"+\"), React.createElement(\"button\", {\n        className: \"iconButton\",\n        hidden: !areFriends,\n        onClick: function onClick() {\n          document.getElementById(\"messages\").hidden = !document.getElementById(\"messages\").hidden;\n          document.getElementById(\"messageTitle\").innerHTML = username;\n          document.getElementById(\"friends\").hidden = true;\n          document.getElementById(\"addFriends\").hidden = true;\n          forceUpdateMessages();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: envelope,\n        alt: \"envelope\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return FriendCard;\n}(React.Component);\n\nfunction checkIfFriends(username) {\n  return new Promise(function (resolve, reject) {\n    utilFunc.getUsersFriends(window.localStorage.getItem(\"Razzlers_Username\")).then(function (friendsList) {\n      var areFriends = false;\n\n      if (friendsList.friends.includes(username.username) || username.username.toLowerCase() === window.localStorage.getItem(\"Razzlers_Username\").toLowerCase()) {\n        areFriends = true;\n      }\n\n      resolve({\n        areFriends: areFriends\n      });\n    });\n  });\n}\n\nexport default FriendCard;","map":{"version":3,"sources":["D:\\RazParent\\RazzlersGithub\\client\\src\\HTMLComponents\\FriendCard.js"],"names":["React","envelope","utilFunc","require","FriendCard","props","state","username","isFriends","checkIfFriends","then","boolFriend","setState","areFriends","console","log","document","getElementById","hidden","innerHTML","forceUpdateMessages","Component","Promise","resolve","reject","getUsersFriends","window","localStorage","getItem","friendsList","friends","includes","toLowerCase"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AACA,IAAMC,QAAQ,GAAGC,OAAO,CAAC,6BAAD,CAAxB;;IAEMC,U;;;;;AACJ,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,oFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAEF,KADC;AAEXG,MAAAA,SAAS,EAAE;AAFA,KAAb;AAIAC,IAAAA,cAAc,CAAC,MAAKJ,KAAN,CAAd,CAA2BK,IAA3B,CAAgC,UAAAC,UAAU,EAAI;AAC5C,YAAKC,QAAL,CAAc;AAACJ,QAAAA,SAAS,EAAEG,UAAU,CAACE;AAAvB,OAAd;AACD,KAFD;AANiB;AASlB;;;;6BAGD;AAAA,UACSN,QADT,GACqB,KAAKF,KAD1B,CACSE,QADT;AAEE,UAAMM,UAAU,GAAG,KAAKP,KAAL,CAAWE,SAA9B;AACA,aACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOD,QAAP,CADF,EAEE;AAAQ,QAAA,SAAS,EAAC,WAAlB;AAA8B,QAAA,MAAM,EAAEM,UAAtC;AAAkD,QAAA,OAAO,EAAE,mBAAM;AAC7DC,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD,SAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,EAKE;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAA+B,QAAA,MAAM,EAAG,CAACF,UAAzC;AAAqD,QAAA,OAAO,EAAE,mBAAM;AAChEG,UAAAA,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCC,MAApC,GAA6C,CAACF,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCC,MAAlF;AACAF,UAAAA,QAAQ,CAACC,cAAT,CAAwB,cAAxB,EAAwCE,SAAxC,GAAoDZ,QAApD;AACAS,UAAAA,QAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCC,MAAnC,GAA4C,IAA5C;AACAF,UAAAA,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCC,MAAtC,GAA+C,IAA/C;AACAE,UAAAA,mBAAmB;AACpB,SANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOE;AAAK,QAAA,GAAG,EAAEnB,QAAV;AAAoB,QAAA,GAAG,EAAC,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,CALF,CADF;AAgBD;;;;EAhCsBD,KAAK,CAACqB,S;;AAmC/B,SAASZ,cAAT,CAAwBF,QAAxB,EACA;AACE,SAAO,IAAIe,OAAJ,CAAY,UAASC,OAAT,EAAkBC,MAAlB,EACnB;AACEtB,IAAAA,QAAQ,CAACuB,eAAT,CAAyBC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,mBAA5B,CAAzB,EAA2ElB,IAA3E,CAAgF,UAAAmB,WAAW,EAC3F;AACE,UAAIhB,UAAU,GAAG,KAAjB;;AACA,UAAGgB,WAAW,CAACC,OAAZ,CAAoBC,QAApB,CAA6BxB,QAAQ,CAACA,QAAtC,KAAmDA,QAAQ,CAACA,QAAT,CAAkByB,WAAlB,OAAoCN,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,mBAA5B,EAAiDI,WAAjD,EAA1F,EAA0J;AACxJnB,QAAAA,UAAU,GAAG,IAAb;AACD;;AACDU,MAAAA,OAAO,CAAC;AAACV,QAAAA,UAAU,EAAVA;AAAD,OAAD,CAAP;AACD,KAPD;AAQD,GAVM,CAAP;AAWD;;AAED,eAAeT,UAAf","sourcesContent":["import React from 'react';\r\nimport envelope from '../images/envelope.png';\r\nconst utilFunc = require('../Helpers/UtilityFunctions');\r\n\r\nclass FriendCard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: props,\r\n      isFriends: false\r\n    };\r\n    checkIfFriends(this.props).then(boolFriend => {\r\n      this.setState({isFriends: boolFriend.areFriends});\r\n    });\r\n  }\r\n\r\n  render()\r\n  {\r\n    const {username} = this.props;\r\n    const areFriends = this.state.isFriends;\r\n    return (\r\n      <div className=\"friendCard\">\r\n        <font>{username}</font>\r\n        <button className=\"addButton\" hidden={areFriends} onClick={() => {\r\n            console.log(\"added\");\r\n          }}>+</button>\r\n        <button className=\"iconButton\" hidden ={!areFriends} onClick={() => {\r\n            document.getElementById(\"messages\").hidden = !document.getElementById(\"messages\").hidden;\r\n            document.getElementById(\"messageTitle\").innerHTML = username;\r\n            document.getElementById(\"friends\").hidden = true;\r\n            document.getElementById(\"addFriends\").hidden = true;\r\n            forceUpdateMessages();\r\n          }}>\r\n          <img src={envelope} alt=\"envelope\"/>\r\n        </button>\r\n      </div>);\r\n  }\r\n}\r\n\r\nfunction checkIfFriends(username)\r\n{\r\n  return new Promise(function(resolve, reject)\r\n  {\r\n    utilFunc.getUsersFriends(window.localStorage.getItem(\"Razzlers_Username\")).then(friendsList =>\r\n    {\r\n      var areFriends = false;\r\n      if(friendsList.friends.includes(username.username) || username.username.toLowerCase() === window.localStorage.getItem(\"Razzlers_Username\").toLowerCase()) {\r\n        areFriends = true;\r\n      }\r\n      resolve({areFriends});\r\n    });\r\n  });\r\n}\r\n\r\nexport default FriendCard;\r\n"]},"metadata":{},"sourceType":"module"}