{"ast":null,"code":"import _classCallCheck from \"D:\\\\RazParent\\\\RazzlersGithub\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\RazParent\\\\RazzlersGithub\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\RazParent\\\\RazzlersGithub\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\RazParent\\\\RazzlersGithub\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\RazParent\\\\RazzlersGithub\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\RazParent\\\\RazzlersGithub\\\\client\\\\src\\\\pages\\\\Login.js\";\nimport React from \"react\";\nimport '../style.css';\n\nvar utilFunc = require('../Helpers/UtilityFunctions');\n\nvar Login =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Login, _React$Component);\n\n  function Login() {\n    _classCallCheck(this, Login);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Login).apply(this, arguments));\n  }\n\n  _createClass(Login, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        className: \"bg2_center\",\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, React.createElement(\"font\", {\n        size: \"26\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, \"Log In\"), React.createElement(\"p\", {\n        hidden: true,\n        id: \"invalidMessage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, React.createElement(\"font\", {\n        className: \"error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, \"Username or password is invalid, please try again!\")), React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        className: \"input\",\n        id: \"usernameInput\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        className: \"input\",\n        id: \"passwordInput\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        id: \"loginButton\",\n        className: \"button2\",\n        onClick: function onClick() {\n          checkForInvalid(document.getElementById(\"usernameInput\").value.trim()).then(function (usernameInvalidity) {\n            checkForInvalid(document.getElementById(\"passwordInput\").value.trim()).then(function (passwordInvalidity) {\n              var validity = !usernameInvalidity && !passwordInvalidity;\n\n              if (validity) {\n                loginVerification(document.getElementById(\"usernameInput\").value, document.getElementById(\"passwordInput\").value).then(function (result) {\n                  if (result === true) {\n                    window.location.href = '/';\n                  } else {\n                    document.getElementById(\"invalidMessage\").hidden = false;\n                  }\n                });\n              }\n            });\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"Login\"));\n    }\n  }]);\n\n  return Login;\n}(React.Component);\n\nfunction checkForInvalid(input) {\n  return new Promise(function (resolve, reject) {\n    var containsInvalid = false;\n\n    if (input.length > 32) {\n      containsInvalid = true;\n    }\n\n    for (var i = 0; i < input.length; i++) {\n      if (input.charCodeAt(i) < 48 && input.charCodeAt(i) !== 46) {\n        containsInvalid = true;\n      } else if (input.charCodeAt(i) > 57 && input.charCodeAt(i) < 64) {\n        // : - @\n        containsInvalid = true;\n      } else if (input.charCodeAt(i) > 90 && input.charCodeAt(i) < 97) {\n        // [ - `\n        containsInvalid = true;\n      } else if (input.charCodeAt(i) > 122) {\n        containsInvalid = true;\n      }\n    }\n\n    resolve(containsInvalid);\n  });\n} // checks if username and password are valid with backend server\n\n\nfunction loginVerification(inUsername, inPassword) {\n  window.event.preventDefault();\n  return new Promise(function (resolve, reject) {\n    var data = '{\"username\": \"' + inUsername + '\", \"password\": \"' + inPassword + '\"}';\n    data = JSON.parse(data);\n    var transport = {\n      headers: {\n        'Content-Type': \"application/json\"\n      },\n      method: \"POST\",\n      body: JSON.stringify(data)\n    };\n    var url = \"//razzlers.me:3001/api/getData/checkLogin\";\n    fetch(url, transport).then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      var serverResponse = json.result;\n\n      if (serverResponse === \"true\") {\n        localStorage.setItem(\"Razzlers_Username\", inUsername);\n        utilFunc.updateLocalSubscribedLists().then(function (result) {\n          resolve(result);\n        });\n      } else {\n        // reject the user, tell invalid password try again\n        localStorage.setItem(\"Razzlers_Username\", null);\n        localStorage.setItem(\"Razzlers_Subscribed_Shows\", null);\n        localStorage.setItem(\"Razzlers_Subscribed_Movies\", null);\n        resolve(false);\n      }\n    }).catch(function (err) {\n      throw new Error(err);\n    });\n  });\n}\n\nexport default Login;","map":{"version":3,"sources":["D:\\RazParent\\RazzlersGithub\\client\\src\\pages\\Login.js"],"names":["React","utilFunc","require","Login","checkForInvalid","document","getElementById","value","trim","then","usernameInvalidity","passwordInvalidity","validity","loginVerification","result","window","location","href","hidden","Component","input","Promise","resolve","reject","containsInvalid","length","i","charCodeAt","inUsername","inPassword","event","preventDefault","data","JSON","parse","transport","headers","method","body","stringify","url","fetch","response","json","serverResponse","localStorage","setItem","updateLocalSubscribedLists","catch","err","Error"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport '../style.css';\r\n\r\nconst utilFunc = require('../Helpers/UtilityFunctions');\r\n\r\nclass Login extends React.Component\r\n{\r\n  render()\r\n  {\r\n    return(\r\n      <form className = \"bg2_center\" align = \"left\" >\r\n        <font size= \"26\">Log In</font>\r\n        <p hidden id=\"invalidMessage\">\r\n          <font className=\"error\">Username or password is invalid, please try again!</font>\r\n        </p>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Username\"\r\n          className=\"input\"\r\n          id=\"usernameInput\"/>\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          className=\"input\"\r\n          id=\"passwordInput\"/>\r\n        <button type=\"submit\" id=\"loginButton\" className = \"button2\" onClick={() => {\r\n          checkForInvalid(document.getElementById(\"usernameInput\").value.trim()).then(usernameInvalidity =>\r\n          {\r\n            checkForInvalid(document.getElementById(\"passwordInput\").value.trim()).then(passwordInvalidity =>\r\n            {\r\n              var validity = !usernameInvalidity && !passwordInvalidity;\r\n              if(validity)\r\n              {\r\n                loginVerification(document.getElementById(\"usernameInput\").value, document.getElementById(\"passwordInput\").value).then(result => {\r\n                  if(result === true)\r\n                  {\r\n                    window.location.href='/';\r\n                  } else {\r\n                    document.getElementById(\"invalidMessage\").hidden=false;\r\n                  }\r\n                });\r\n              }\r\n            });\r\n          });\r\n        }}>Login</button>\r\n    </form>\r\n    );\r\n  }\r\n}\r\n\r\nfunction checkForInvalid(input)\r\n{\r\n  return new Promise(function(resolve, reject)\r\n  {\r\n    var containsInvalid = false;\r\n    if(input.length > 32)\r\n    {\r\n      containsInvalid = true;\r\n    }\r\n    for(var i = 0; i < input.length; i++)\r\n    {\r\n      if(input.charCodeAt(i) < 48 && input.charCodeAt(i) !== 46)\r\n      {\r\n        containsInvalid = true;\r\n      }\r\n      else if(input.charCodeAt(i) > 57 && input.charCodeAt(i) < 64)\r\n      {\r\n        // : - @\r\n        containsInvalid = true;\r\n      }\r\n      else if(input.charCodeAt(i) > 90 && input.charCodeAt(i) < 97)\r\n      {\r\n        // [ - `\r\n        containsInvalid = true;\r\n      }\r\n      else if(input.charCodeAt(i) > 122)\r\n      {\r\n        containsInvalid = true;\r\n      }\r\n    }\r\n    resolve(containsInvalid);\r\n  });\r\n}\r\n\r\n// checks if username and password are valid with backend server\r\nfunction loginVerification(inUsername, inPassword)\r\n{\r\n  window.event.preventDefault();\r\n  return new Promise(function(resolve, reject)\r\n  {\r\n    var data = '{\"username\": \"' + inUsername + '\", \"password\": \"' + inPassword + '\"}';\r\n    data = JSON.parse(data);\r\n    var transport = {\r\n      headers: {\r\n        'Content-Type': \"application/json\"\r\n      },\r\n      method: \"POST\",\r\n      body: JSON.stringify(data)\r\n    };\r\n    const url = \"//razzlers.me:3001/api/getData/checkLogin\";\r\n    fetch(url, transport).then(response => response.json()).then(json => {\r\n      var serverResponse = json.result;\r\n      if(serverResponse === \"true\")\r\n      {\r\n        localStorage.setItem(\"Razzlers_Username\", inUsername);\r\n        utilFunc.updateLocalSubscribedLists().then(result => {\r\n          resolve(result);\r\n        });\r\n      } else {\r\n        // reject the user, tell invalid password try again\r\n        localStorage.setItem(\"Razzlers_Username\", null);\r\n        localStorage.setItem(\"Razzlers_Subscribed_Shows\", null);\r\n        localStorage.setItem(\"Razzlers_Subscribed_Movies\", null);\r\n        resolve(false);\r\n      }\r\n    }).catch(err => {\r\n      throw new Error(err);\r\n    });\r\n  });\r\n}\r\n\r\nexport default Login\r\n"]},"metadata":{},"sourceType":"module"}