{"ast":null,"code":"exports.getSubscribedMovieList = function () {\n  return getSubscribedMList();\n};\n\nfunction getSubscribedMList() {\n  return new Promise(function (resolve, reject) {\n    var username = window.localStorage.getItem(\"Razzlers_Username\"); // check if username is undefined\n\n    var data = '{\"username\": \"' + username + '\"}';\n    data = JSON.parse(data);\n    var transport = {\n      headers: {\n        'Content-Type': \"application/json\"\n      },\n      method: \"PUT\",\n      body: JSON.stringify(data)\n    };\n    var url = \"//localhost:3001/api/getData/getSubscribedMovies\";\n    fetch(url, transport).then(function (result) {\n      return result.json();\n    }).then(function (json) {\n      resolve(json);\n    }).catch(function (err) {\n      throw new Error(err);\n    });\n  });\n}\n\nexports.getSubscribedShowList = function () {\n  return getSubscribedSList();\n};\n\nfunction getSubscribedSList() {\n  return new Promise(function (resolve, reject) {\n    var username = window.localStorage.getItem(\"Razzlers_Username\"); // check if username is undefined\n\n    var data = '{\"username\": \"' + username + '\"}';\n    data = JSON.parse(data);\n    var transport = {\n      headers: {\n        'Content-Type': \"application/json\"\n      },\n      method: \"PUT\",\n      body: JSON.stringify(data)\n    };\n    var url = \"//localhost:3001/api/getData/getSubscribedShows\";\n    fetch(url, transport).then(function (result) {\n      return result.json();\n    }).then(function (json) {\n      resolve(json);\n    }).catch(function (err) {\n      throw new Error(err);\n    });\n  });\n}\n\nexports.updateLocalSubscribedLists = function () {\n  return new Promise(function (resolve, reject) {\n    getSubscribedSList().then(function (result) {\n      var showList = [];\n\n      if (Array.isArray(result)) {\n        result.forEach(function (show) {\n          showList[showList.length] = show.tv_show_id;\n        });\n        localStorage.setItem(\"Razzlers_Subscribed_Shows\", JSON.stringify(showList));\n      } else {\n        localStorage.setItem(\"Razzlers_Subscribed_Shows\", null);\n      }\n    });\n    getSubscribedMList().then(function (result) {\n      var movieList = [];\n\n      if (Array.isArray(result)) {\n        result.forEach(function (movie) {\n          movieList[movieList.length] = movie.movie_id;\n        });\n        localStorage.setItem(\"Razzlers_Subscribed_Movies\", JSON.stringify(movieList));\n      } else {\n        localStorage.setItem(\"Razzlers_Subscribed_Movies\", null);\n      }\n\n      resolve(true);\n    });\n  });\n};","map":{"version":3,"sources":["C:\\Users\\Connor\\RazzlersGithub\\client\\src\\Helpers\\UtilityFunctions.js"],"names":["exports","getSubscribedMovieList","getSubscribedMList","Promise","resolve","reject","username","window","localStorage","getItem","data","JSON","parse","transport","headers","method","body","stringify","url","fetch","then","result","json","catch","err","Error","getSubscribedShowList","getSubscribedSList","updateLocalSubscribedLists","showList","Array","isArray","forEach","show","length","tv_show_id","setItem","movieList","movie","movie_id"],"mappings":"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","sourcesContent":["exports.getSubscribedMovieList = function()\r\n{\r\n  return getSubscribedMList();\r\n}\r\n\r\nfunction getSubscribedMList()\r\n{\r\n  return new Promise(function(resolve, reject)\r\n  {\r\n    var username = window.localStorage.getItem(\"Razzlers_Username\");\r\n    // check if username is undefined\r\n    var data = '{\"username\": \"' + username + '\"}';\r\n    data = JSON.parse(data);\r\n    var transport = {\r\n      headers: {\r\n        'Content-Type': \"application/json\"\r\n      },\r\n      method: \"PUT\",\r\n      body: JSON.stringify(data)\r\n    };\r\n    const url = \"//localhost:3001/api/getData/getSubscribedMovies\";\r\n    fetch(url, transport).then(result => result.json()).then(json => {\r\n      resolve(json);\r\n    }).catch(err => {\r\n      throw new Error(err);\r\n    });\r\n  });\r\n}\r\n\r\nexports.getSubscribedShowList = function()\r\n{\r\n  return getSubscribedSList();\r\n}\r\n\r\nfunction getSubscribedSList()\r\n{\r\n  return new Promise(function(resolve, reject)\r\n  {\r\n    var username = window.localStorage.getItem(\"Razzlers_Username\");\r\n    // check if username is undefined\r\n    var data = '{\"username\": \"' + username + '\"}';\r\n    data = JSON.parse(data);\r\n    var transport = {\r\n      headers: {\r\n        'Content-Type': \"application/json\"\r\n      },\r\n      method: \"PUT\",\r\n      body: JSON.stringify(data)\r\n    };\r\n    const url = \"//localhost:3001/api/getData/getSubscribedShows\";\r\n    fetch(url, transport).then(result => result.json()).then(json => {\r\n      resolve(json);\r\n    }).catch(err => {\r\n      throw new Error(err);\r\n    });\r\n  });\r\n}\r\n\r\nexports.updateLocalSubscribedLists = function()\r\n{\r\n  return new Promise(function(resolve, reject)\r\n  {\r\n    getSubscribedSList().then(result => {\r\n      var showList = [];\r\n      if(Array.isArray(result))\r\n      {\r\n        result.forEach(function(show)\r\n        {\r\n          showList[showList.length] = show.tv_show_id;\r\n        });\r\n        localStorage.setItem(\"Razzlers_Subscribed_Shows\", JSON.stringify(showList));\r\n      } else {\r\n        localStorage.setItem(\"Razzlers_Subscribed_Shows\", null);\r\n      }\r\n    });\r\n    getSubscribedMList().then(result =>\r\n    {\r\n      var movieList = [];\r\n      if(Array.isArray(result))\r\n      {\r\n        result.forEach(function(movie)\r\n        {\r\n          movieList[movieList.length] = movie.movie_id;\r\n        });\r\n        localStorage.setItem(\"Razzlers_Subscribed_Movies\", JSON.stringify(movieList));\r\n      } else {\r\n        localStorage.setItem(\"Razzlers_Subscribed_Movies\", null);\r\n      }\r\n      resolve(true);\r\n    });\r\n  });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}