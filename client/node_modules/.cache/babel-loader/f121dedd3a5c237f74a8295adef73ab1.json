{"ast":null,"code":"import _classCallCheck from \"D:\\\\RazParent\\\\RazzlersGithub\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\RazParent\\\\RazzlersGithub\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\RazParent\\\\RazzlersGithub\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\RazParent\\\\RazzlersGithub\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\RazParent\\\\RazzlersGithub\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\RazParent\\\\RazzlersGithub\\\\client\\\\src\\\\pages\\\\PlayVideo.js\";\nimport React from \"react\";\nimport '../style.css';\n\nvar PlayVideo =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PlayVideo, _React$Component);\n\n  function PlayVideo() {\n    _classCallCheck(this, PlayVideo);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(PlayVideo).apply(this, arguments));\n  }\n\n  _createClass(PlayVideo, [{\n    key: \"render\",\n    value: function render() {\n      var _ref = null,\n          isMovie = _ref.isMovie,\n          showID = _ref.showID;\n      checkParams.then(function (result) {\n        console.log(result);\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 11\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 12\n          },\n          __self: this\n        }, React.createElement(\"font\", {\n          color: \"white\",\n          size: \"50\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 12\n          },\n          __self: this\n        }, \"Testing\")), React.createElement(\"video\", {\n          width: \"320\",\n          height: \"240\",\n          controls: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14\n          },\n          __self: this\n        }, React.createElement(\"source\", {\n          src: \"https://fs1.rovault.org/d2d63747331dc977?download_token=dadf39e56b642fd8fbd715c32f79f7a3d771b46ada49ccc48d9acfd137caf136\",\n          type: \"video/mp4\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15\n          },\n          __self: this\n        })));\n      });\n    }\n  }]);\n\n  return PlayVideo;\n}(React.Component);\n\nfunction checkParams() {\n  return new Promise(function (resolve, reject) {\n    var url = window.location.href;\n    url = new URL(url);\n    var isMovie = url.searchParams.get(\"isMovie\");\n    var movie_id = url.searchParams.get(\"id\");\n    resolve({\n      isMovie: isMovie,\n      movie_id: movie_id\n    });\n  });\n} // checks if username and password are valid with backend server\n\n/*function loginVerification(inUsername, inPassword)\r\n{\r\n  return new Promise(function(resolve, reject)\r\n  {\r\n    var data = '{\"username\": \"' + inUsername + '\", \"password\": \"' + inPassword + '\"}';\r\n    data = JSON.parse(data);\r\n    var transport = {\r\n      headers: {\r\n        'Content-Type': \"application/json\"\r\n      },\r\n      method: \"POST\",\r\n      body: JSON.stringify(data)\r\n    };\r\n    const url = \"http://razzlers.me:3001/api/getData/checkLogin\";\r\n    fetch(url, transport).then(response => response.json()).then(json => {\r\n      var serverResponse = json.result;\r\n      console.log(serverResponse);\r\n      if(serverResponse === \"true\")\r\n      {\r\n        localStorage.setItem(\"Razzlers_Username\", inUsername);\r\n        resolve(true);\r\n      } else {\r\n        // reject the user, tell invalid password try again\r\n        localStorage.setItem(\"Razzlers_Username\", null);\r\n        resolve(false);\r\n      }\r\n    });\r\n  });\r\n}*/\n\n\nexport default PlayVideo;","map":{"version":3,"sources":["D:\\RazParent\\RazzlersGithub\\client\\src\\pages\\PlayVideo.js"],"names":["React","PlayVideo","isMovie","showID","checkParams","then","result","console","log","Component","Promise","resolve","reject","url","window","location","href","URL","searchParams","get","movie_id"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;;IAEMC,S;;;;;;;;;;;;;6BAEK;AAAA,iBACmB,IADnB;AAAA,UACAC,OADA,QACAA,OADA;AAAA,UACSC,MADT,QACSA,MADT;AAEPC,MAAAA,WAAW,CAACC,IAAZ,CAAiB,UAAAC,MAAM,EAAI;AACzBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAI;AAAM,UAAA,KAAK,EAAE,OAAb;AAAqB,UAAA,IAAI,EAAG,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAJ,CADA,EAGA;AAAO,UAAA,KAAK,EAAC,KAAb;AAAmB,UAAA,MAAM,EAAC,KAA1B;AAAgC,UAAA,QAAQ,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAQ,UAAA,GAAG,EAAC,0HAAZ;AAAuI,UAAA,IAAI,EAAC,WAA5I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CAHA,CADF;AAWD,OAbD;AAcD;;;;EAlBqBN,KAAK,CAACS,S;;AAqB9B,SAASL,WAAT,GACA;AACE,SAAO,IAAIM,OAAJ,CAAY,UAASC,OAAT,EAAkBC,MAAlB,EACnB;AACE,QAAIC,GAAG,GAAGC,MAAM,CAACC,QAAP,CAAgBC,IAA1B;AACAH,IAAAA,GAAG,GAAG,IAAII,GAAJ,CAAQJ,GAAR,CAAN;AACA,QAAIX,OAAO,GAAGW,GAAG,CAACK,YAAJ,CAAiBC,GAAjB,CAAqB,SAArB,CAAd;AACA,QAAIC,QAAQ,GAAGP,GAAG,CAACK,YAAJ,CAAiBC,GAAjB,CAAqB,IAArB,CAAf;AACAR,IAAAA,OAAO,CAAC;AAACT,MAAAA,OAAO,EAAPA,OAAD;AAAUkB,MAAAA,QAAQ,EAARA;AAAV,KAAD,CAAP;AACD,GAPM,CAAP;AAQD,C,CAED;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA,eAAenB,SAAf","sourcesContent":["import React from \"react\";\r\nimport '../style.css';\r\n\r\nclass PlayVideo extends React.Component {\r\n\r\n  render() {\r\n    const {isMovie, showID} = null;\r\n    checkParams.then(result => {\r\n      console.log(result);\r\n      return (\r\n        <div>\r\n        <h2><font color =\"white\" size = \"50\">Testing</font></h2>\r\n\r\n        <video width=\"320\" height=\"240\" controls>\r\n          <source src=\"https://fs1.rovault.org/d2d63747331dc977?download_token=dadf39e56b642fd8fbd715c32f79f7a3d771b46ada49ccc48d9acfd137caf136\" type=\"video/mp4\"/>\r\n        </video>\r\n\r\n\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n}\r\n\r\nfunction checkParams()\r\n{\r\n  return new Promise(function(resolve, reject)\r\n  {\r\n    var url = window.location.href;\r\n    url = new URL(url);\r\n    var isMovie = url.searchParams.get(\"isMovie\");\r\n    var movie_id = url.searchParams.get(\"id\");\r\n    resolve({isMovie, movie_id});\r\n  });\r\n}\r\n\r\n// checks if username and password are valid with backend server\r\n/*function loginVerification(inUsername, inPassword)\r\n{\r\n  return new Promise(function(resolve, reject)\r\n  {\r\n    var data = '{\"username\": \"' + inUsername + '\", \"password\": \"' + inPassword + '\"}';\r\n    data = JSON.parse(data);\r\n    var transport = {\r\n      headers: {\r\n        'Content-Type': \"application/json\"\r\n      },\r\n      method: \"POST\",\r\n      body: JSON.stringify(data)\r\n    };\r\n    const url = \"http://razzlers.me:3001/api/getData/checkLogin\";\r\n    fetch(url, transport).then(response => response.json()).then(json => {\r\n      var serverResponse = json.result;\r\n      console.log(serverResponse);\r\n      if(serverResponse === \"true\")\r\n      {\r\n        localStorage.setItem(\"Razzlers_Username\", inUsername);\r\n        resolve(true);\r\n      } else {\r\n        // reject the user, tell invalid password try again\r\n        localStorage.setItem(\"Razzlers_Username\", null);\r\n        resolve(false);\r\n      }\r\n    });\r\n  });\r\n}*/\r\n\r\nexport default PlayVideo\r\n"]},"metadata":{},"sourceType":"module"}