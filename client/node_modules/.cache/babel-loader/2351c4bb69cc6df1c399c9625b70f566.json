{"ast":null,"code":"import _classCallCheck from \"D:\\\\RazParent\\\\RazzlersGithub\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\RazParent\\\\RazzlersGithub\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\RazParent\\\\RazzlersGithub\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\RazParent\\\\RazzlersGithub\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\RazParent\\\\RazzlersGithub\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\RazParent\\\\RazzlersGithub\\\\client\\\\src\\\\pages\\\\PlayVideo.js\";\nimport React from \"react\";\nimport '../style.css';\n\nvar PlayVideo =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PlayVideo, _React$Component);\n\n  function PlayVideo() {\n    _classCallCheck(this, PlayVideo);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(PlayVideo).apply(this, arguments));\n  }\n\n  _createClass(PlayVideo, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 7\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8\n        },\n        __self: this\n      }, React.createElement(\"font\", {\n        color: \"white\",\n        size: \"50\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8\n        },\n        __self: this\n      }, \"Test\")), React.createElement(\"video\", {\n        width: \"320\",\n        height: \"240\",\n        controls: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }, React.createElement(\"source\", {\n        src: \"https://fs1.rovault.org/d2d63747331dc977?download_token=dadf39e56b642fd8fbd715c32f79f7a3d771b46ada49ccc48d9acfd137caf136\",\n        type: \"video/mp4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return PlayVideo;\n}(React.Component); // checks if username and password are valid with backend server\n\n\nfunction loginVerification(inUsername, inPassword) {\n  return new Promise(function (resolve, reject) {\n    var data = '{\"username\": \"' + inUsername + '\", \"password\": \"' + inPassword + '\"}';\n    data = JSON.parse(data);\n    var transport = {\n      headers: {\n        'Content-Type': \"application/json\"\n      },\n      method: \"POST\",\n      body: JSON.stringify(data)\n    };\n    var url = \"http://razzlers.me:3001/api/getData/checkLogin\";\n    fetch(url, transport).then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      var serverResponse = json.result;\n      console.log(serverResponse);\n\n      if (serverResponse === \"true\") {\n        localStorage.setItem(\"Razzlers_Username\", inUsername);\n        resolve(true);\n      } else {\n        // reject the user, tell invalid password try again\n        localStorage.setItem(\"Razzlers_Username\", null);\n        resolve(false);\n      }\n    });\n  });\n}\n\nexport default PlayVideo;","map":{"version":3,"sources":["D:\\RazParent\\RazzlersGithub\\client\\src\\pages\\PlayVideo.js"],"names":["React","PlayVideo","Component","loginVerification","inUsername","inPassword","Promise","resolve","reject","data","JSON","parse","transport","headers","method","body","stringify","url","fetch","then","response","json","serverResponse","result","console","log","localStorage","setItem"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;;IAEMC,S;;;;;;;;;;;;;6BACK;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI;AAAM,QAAA,KAAK,EAAE,OAAb;AAAqB,QAAA,IAAI,EAAG,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAJ,CADA,EAGA;AAAO,QAAA,KAAK,EAAC,KAAb;AAAmB,QAAA,MAAM,EAAC,KAA1B;AAAgC,QAAA,QAAQ,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,GAAG,EAAC,0HAAZ;AAAuI,QAAA,IAAI,EAAC,WAA5I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAHA,CADF;AAWD;;;;EAbqBD,KAAK,CAACE,S,GAgB9B;;;AACA,SAASC,iBAAT,CAA2BC,UAA3B,EAAuCC,UAAvC,EACA;AACE,SAAO,IAAIC,OAAJ,CAAY,UAASC,OAAT,EAAkBC,MAAlB,EACnB;AACE,QAAIC,IAAI,GAAG,mBAAmBL,UAAnB,GAAgC,kBAAhC,GAAqDC,UAArD,GAAkE,IAA7E;AACAI,IAAAA,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWF,IAAX,CAAP;AACA,QAAIG,SAAS,GAAG;AACdC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OADK;AAIdC,MAAAA,MAAM,EAAE,MAJM;AAKdC,MAAAA,IAAI,EAAEL,IAAI,CAACM,SAAL,CAAeP,IAAf;AALQ,KAAhB;AAOA,QAAMQ,GAAG,GAAG,gDAAZ;AACAC,IAAAA,KAAK,CAACD,GAAD,EAAML,SAAN,CAAL,CAAsBO,IAAtB,CAA2B,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,KAAnC,EAAwDF,IAAxD,CAA6D,UAAAE,IAAI,EAAI;AACnE,UAAIC,cAAc,GAAGD,IAAI,CAACE,MAA1B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,cAAZ;;AACA,UAAGA,cAAc,KAAK,MAAtB,EACA;AACEI,QAAAA,YAAY,CAACC,OAAb,CAAqB,mBAArB,EAA0CvB,UAA1C;AACAG,QAAAA,OAAO,CAAC,IAAD,CAAP;AACD,OAJD,MAIO;AACL;AACAmB,QAAAA,YAAY,CAACC,OAAb,CAAqB,mBAArB,EAA0C,IAA1C;AACApB,QAAAA,OAAO,CAAC,KAAD,CAAP;AACD;AACF,KAZD;AAaD,GAzBM,CAAP;AA0BD;;AAED,eAAeN,SAAf","sourcesContent":["import React from \"react\";\r\nimport '../style.css';\r\n\r\nclass PlayVideo extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n      <h2><font color =\"white\" size = \"50\">Test</font></h2>\r\n\r\n      <video width=\"320\" height=\"240\" controls>\r\n        <source src=\"https://fs1.rovault.org/d2d63747331dc977?download_token=dadf39e56b642fd8fbd715c32f79f7a3d771b46ada49ccc48d9acfd137caf136\" type=\"video/mp4\"/>\r\n      </video>\r\n\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// checks if username and password are valid with backend server\r\nfunction loginVerification(inUsername, inPassword)\r\n{\r\n  return new Promise(function(resolve, reject)\r\n  {\r\n    var data = '{\"username\": \"' + inUsername + '\", \"password\": \"' + inPassword + '\"}';\r\n    data = JSON.parse(data);\r\n    var transport = {\r\n      headers: {\r\n        'Content-Type': \"application/json\"\r\n      },\r\n      method: \"POST\",\r\n      body: JSON.stringify(data)\r\n    };\r\n    const url = \"http://razzlers.me:3001/api/getData/checkLogin\";\r\n    fetch(url, transport).then(response => response.json()).then(json => {\r\n      var serverResponse = json.result;\r\n      console.log(serverResponse);\r\n      if(serverResponse === \"true\")\r\n      {\r\n        localStorage.setItem(\"Razzlers_Username\", inUsername);\r\n        resolve(true);\r\n      } else {\r\n        // reject the user, tell invalid password try again\r\n        localStorage.setItem(\"Razzlers_Username\", null);\r\n        resolve(false);\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\nexport default PlayVideo\r\n"]},"metadata":{},"sourceType":"module"}