{"ast":null,"code":"import _classCallCheck from \"D:\\\\RazParent\\\\RazzlersGithub\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\RazParent\\\\RazzlersGithub\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\RazParent\\\\RazzlersGithub\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\RazParent\\\\RazzlersGithub\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\RazParent\\\\RazzlersGithub\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\RazParent\\\\RazzlersGithub\\\\client\\\\src\\\\pages\\\\Episodes.js\";\nimport React from \"react\";\nimport '../style.css';\nimport EpisodeList from \"../HTMLComponents/EpisodeList\";\n\nvar utilFunc = require('../Helpers/UtilityFunctions');\n\nvar Episodes =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Episodes, _React$Component);\n\n  function Episodes(props) {\n    var _this;\n\n    _classCallCheck(this, Episodes);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Episodes).call(this, props));\n    _this.state = {\n      episodeList: 0,\n      id: 0,\n      showTitle: \"\"\n    };\n    checkParams().then(function (json) {\n      _this.setState({\n        id: json.id\n      });\n\n      var id = json.id;\n      utilFunc.getEpisodeList(id).then(function (result) {\n        _this.setState({\n          episodeList: result\n        });\n\n        var set = {};\n        getShowInfo(id).then(function (result) {\n          set = result;\n\n          _this.setState({\n            showTitle: set.title\n          });\n        });\n      });\n    });\n    return _this;\n  }\n\n  _createClass(Episodes, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          episodeList = _this$state.episodeList,\n          showTitle = _this$state.showTitle;\n\n      if (episodeList !== 0) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"centerTextWithBackLonger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, React.createElement(\"font\", {\n          color: \"black\",\n          size: \"1000\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, showTitle)), React.createElement(EpisodeList, {\n          episodes: episodeList,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }));\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Episodes;\n}(React.Component);\n\nfunction checkParams() {\n  return new Promise(function (resolve, reject) {\n    var url = window.location.href;\n    url = new URL(url);\n    var id = url.searchParams.get(\"id\");\n    resolve({\n      id: id\n    });\n  });\n}\n\nfunction getShowInfo(id) {\n  return new Promise(function (resolve, reject) {\n    var data = '{\"id\": \"' + id + '\"}';\n    data = JSON.parse(data);\n    var transport = {\n      headers: {\n        'Content-Type': \"application/json\"\n      },\n      method: \"PUT\",\n      body: JSON.stringify(data)\n    };\n    var url = \"http://razzlers.me:3001/api/getData/getShowInfo\";\n    fetch(url, transport).then(function (result) {\n      return result.json();\n    }).then(function (json) {\n      resolve(json);\n    }).catch(function (err) {\n      throw new Error(err);\n    });\n  });\n}\n\nexport default Episodes;","map":{"version":3,"sources":["D:\\RazParent\\RazzlersGithub\\client\\src\\pages\\Episodes.js"],"names":["React","EpisodeList","utilFunc","require","Episodes","props","state","episodeList","id","showTitle","checkParams","then","json","setState","getEpisodeList","result","set","getShowInfo","title","Component","Promise","resolve","reject","url","window","location","href","URL","searchParams","get","data","JSON","parse","transport","headers","method","body","stringify","fetch","catch","err","Error"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport '../style.css';\r\nimport EpisodeList from \"../HTMLComponents/EpisodeList\";\r\n\r\nconst utilFunc = require('../Helpers/UtilityFunctions');\r\n\r\nclass Episodes extends React.Component {\r\n  constructor(props)\r\n  {\r\n    super(props)\r\n    this.state = {\r\n      episodeList: 0,\r\n\t  id:0,\r\n\t  showTitle:\"\"\r\n    };\r\n\t\r\n\tcheckParams().then(json => {\r\n      this.setState({\r\n        id: json.id,\r\n      });\r\n\t  \r\n      var id = json.id;\r\n\t  utilFunc.getEpisodeList(id).then(result => {\r\n\t\tthis.setState({ episodeList: result });\r\n\t\t\r\n\t\tvar set = {};\r\n\t\tgetShowInfo(id).then(result => {\r\n\t\t\tset = result;\r\n\t\t\tthis.setState({\r\n\t\t\t\tshowTitle: set.title\r\n\t\t\t});\r\n\t\t});\r\n\t  });\r\n    });\r\n  }\r\n  render() {\r\n    const {episodeList, showTitle} = this.state;\r\n    if(episodeList !== 0)\r\n    {\r\n      return (\r\n        <div>\r\n            <p className=\"centerTextWithBackLonger\"><font color =\"black\" size=\"1000\">{showTitle}</font></p>\r\n            <EpisodeList episodes={episodeList}></EpisodeList>\r\n        </div>\r\n      );\r\n    }\r\n    return(<div></div>)\r\n  }\r\n}\r\n\r\nfunction checkParams()\r\n{\r\n  return new Promise(function(resolve, reject)\r\n  {\r\n    var url = window.location.href;\r\n    url = new URL(url);\r\n    var id = url.searchParams.get(\"id\");\r\n    resolve({id});\r\n  });\r\n}\r\n\r\n\r\nfunction getShowInfo(id)\r\n{\r\n  return new Promise(function(resolve, reject)\r\n  {\r\n    var data = '{\"id\": \"' + id + '\"}';\r\n    data = JSON.parse(data);\r\n    var transport = {\r\n      headers: {\r\n        'Content-Type': \"application/json\"\r\n      },\r\n      method: \"PUT\",\r\n      body: JSON.stringify(data)\r\n    };\r\n    const url = \"http://razzlers.me:3001/api/getData/getShowInfo\";\r\n    fetch(url, transport).then(result => result.json()).then(json => {\r\n      resolve(json);\r\n    }).catch(err => {\r\n      throw new Error(err);\r\n    });\r\n  });\r\n}\r\n\r\nexport default Episodes\r\n"]},"metadata":{},"sourceType":"module"}