{"ast":null,"code":"exports.getMovieList = function () {\n  return getMovieList();\n};\n\nfunction getMovieList() {\n  return new Promise(function (resolve, reject) {\n    var transport = {\n      headers: {\n        'Content-Type': \"application/json\"\n      },\n      method: \"GET\"\n    };\n    var url = \"http://razzlers.me:3001/api/getData/getMovieList\";\n    fetch(url, transport).then(function (result) {\n      return result.json();\n    }).then(function (json) {\n      resolve(json);\n    }).catch(function (err) {\n      throw new Error(err);\n    });\n  });\n}\n\nexports.getShowList = function () {\n  return getShowList();\n};\n\nfunction getShowList() {\n  return new Promise(function (resolve, reject) {\n    var transport = {\n      headers: {\n        'Content-Type': \"application/json\"\n      },\n      method: \"GET\"\n    };\n    var url = \"http://razzlers.me:3001/api/getData/getShowList\";\n    fetch(url, transport).then(function (result) {\n      return result.json();\n    }).then(function (json) {\n      resolve(json);\n    }).catch(function (err) {\n      throw new Error(err);\n    });\n  });\n}\n\nexports.getSubscribedMovieList = function () {\n  return getSubscribedMList();\n};\n\nfunction getSubscribedMList() {\n  return new Promise(function (resolve, reject) {\n    var username = window.localStorage.getItem(\"Razzlers_Username\"); // check if username is undefined\n\n    var data = '{\"username\": \"' + username + '\"}';\n    data = JSON.parse(data);\n    var transport = {\n      headers: {\n        'Content-Type': \"application/json\"\n      },\n      method: \"PUT\",\n      body: JSON.stringify(data)\n    };\n    var url = \"//localhost:3001/api/getData/getSubscribedMovies\";\n    fetch(url, transport).then(function (result) {\n      return result.json();\n    }).then(function (json) {\n      resolve(json);\n    }).catch(function (err) {\n      throw new Error(err);\n    });\n  });\n}\n\nexports.getSubscribedShowList = function () {\n  return getSubscribedSList();\n};\n\nfunction getSubscribedSList() {\n  return new Promise(function (resolve, reject) {\n    var username = window.localStorage.getItem(\"Razzlers_Username\"); // check if username is undefined\n\n    var data = '{\"username\": \"' + username + '\"}';\n    data = JSON.parse(data);\n    var transport = {\n      headers: {\n        'Content-Type': \"application/json\"\n      },\n      method: \"PUT\",\n      body: JSON.stringify(data)\n    };\n    var url = \"//localhost:3001/api/getData/getSubscribedShows\";\n    fetch(url, transport).then(function (result) {\n      return result.json();\n    }).then(function (json) {\n      resolve(json);\n    }).catch(function (err) {\n      throw new Error(err);\n    });\n  });\n}\n\nexports.updateLocalSubscribedLists = function () {\n  return new Promise(function (resolve, reject) {\n    getSubscribedSList().then(function (result) {\n      var showList = [];\n\n      if (Array.isArray(result)) {\n        result.forEach(function (show) {\n          showList[showList.length] = show.tv_show_id;\n        });\n        localStorage.setItem(\"Razzlers_Subscribed_Shows\", JSON.stringify(showList));\n      } else {\n        localStorage.setItem(\"Razzlers_Subscribed_Shows\", null);\n      }\n    });\n    getSubscribedMList().then(function (result) {\n      var movieList = [];\n\n      if (Array.isArray(result)) {\n        result.forEach(function (movie) {\n          movieList[movieList.length] = movie.movie_id;\n        });\n        localStorage.setItem(\"Razzlers_Subscribed_Movies\", JSON.stringify(movieList));\n      } else {\n        localStorage.setItem(\"Razzlers_Subscribed_Movies\", null);\n      }\n\n      resolve(true);\n    });\n  });\n};","map":{"version":3,"sources":["D:\\RazzlersGithub\\client\\src\\Helpers\\UtilityFunctions.js"],"names":["exports","getMovieList","Promise","resolve","reject","transport","headers","method","url","fetch","then","result","json","catch","err","Error","getShowList","getSubscribedMovieList","getSubscribedMList","username","window","localStorage","getItem","data","JSON","parse","body","stringify","getSubscribedShowList","getSubscribedSList","updateLocalSubscribedLists","showList","Array","isArray","forEach","show","length","tv_show_id","setItem","movieList","movie","movie_id"],"mappings":"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","sourcesContent":["exports.getMovieList = function()\r\n{\r\n  return getMovieList();\r\n}\r\n\r\nfunction getMovieList()\r\n{\r\n  return new Promise(function(resolve, reject)\r\n  {\r\n    var transport = {\r\n      headers: {\r\n        'Content-Type': \"application/json\"\r\n      },\r\n      method: \"GET\"\r\n    };\r\n    const url = \"http://razzlers.me:3001/api/getData/getMovieList\";\r\n    fetch(url, transport).then(result => result.json()).then(json => {\r\n      resolve(json);\r\n    }).catch(err => {\r\n      throw new Error(err);\r\n    });\r\n  });\r\n}\r\n\r\nexports.getShowList = function()\r\n{\r\n  return getShowList();\r\n}\r\n\r\n\r\nfunction getShowList()\r\n{\r\n  return new Promise(function(resolve, reject)\r\n  {\r\n    var transport = {\r\n      headers: {\r\n        'Content-Type': \"application/json\"\r\n      },\r\n      method: \"GET\"\r\n    };\r\n    const url = \"http://razzlers.me:3001/api/getData/getShowList\";\r\n    fetch(url, transport).then(result => result.json()).then(json => {\r\n      resolve(json);\r\n    }).catch(err => {\r\n      throw new Error(err);\r\n    });\r\n  });\r\n}\r\n\r\nexports.getSubscribedMovieList = function()\r\n{\r\n  return getSubscribedMList();\r\n}\r\n\r\nfunction getSubscribedMList()\r\n{\r\n  return new Promise(function(resolve, reject)\r\n  {\r\n    var username = window.localStorage.getItem(\"Razzlers_Username\");\r\n    // check if username is undefined\r\n    var data = '{\"username\": \"' + username + '\"}';\r\n    data = JSON.parse(data);\r\n    var transport = {\r\n      headers: {\r\n        'Content-Type': \"application/json\"\r\n      },\r\n      method: \"PUT\",\r\n      body: JSON.stringify(data)\r\n    };\r\n    const url = \"//localhost:3001/api/getData/getSubscribedMovies\";\r\n    fetch(url, transport).then(result => result.json()).then(json => {\r\n      resolve(json);\r\n    }).catch(err => {\r\n      throw new Error(err);\r\n    });\r\n  });\r\n}\r\n\r\nexports.getSubscribedShowList = function()\r\n{\r\n  return getSubscribedSList();\r\n}\r\n\r\nfunction getSubscribedSList()\r\n{\r\n  return new Promise(function(resolve, reject)\r\n  {\r\n    var username = window.localStorage.getItem(\"Razzlers_Username\");\r\n    // check if username is undefined\r\n    var data = '{\"username\": \"' + username + '\"}';\r\n    data = JSON.parse(data);\r\n    var transport = {\r\n      headers: {\r\n        'Content-Type': \"application/json\"\r\n      },\r\n      method: \"PUT\",\r\n      body: JSON.stringify(data)\r\n    };\r\n    const url = \"//localhost:3001/api/getData/getSubscribedShows\";\r\n    fetch(url, transport).then(result => result.json()).then(json => {\r\n      resolve(json);\r\n    }).catch(err => {\r\n      throw new Error(err);\r\n    });\r\n  });\r\n}\r\n\r\nexports.updateLocalSubscribedLists = function()\r\n{\r\n  return new Promise(function(resolve, reject)\r\n  {\r\n    getSubscribedSList().then(result => {\r\n      var showList = [];\r\n      if(Array.isArray(result))\r\n      {\r\n        result.forEach(function(show)\r\n        {\r\n          showList[showList.length] = show.tv_show_id;\r\n        });\r\n        localStorage.setItem(\"Razzlers_Subscribed_Shows\", JSON.stringify(showList));\r\n      } else {\r\n        localStorage.setItem(\"Razzlers_Subscribed_Shows\", null);\r\n      }\r\n    });\r\n    getSubscribedMList().then(result =>\r\n    {\r\n      var movieList = [];\r\n      if(Array.isArray(result))\r\n      {\r\n        result.forEach(function(movie)\r\n        {\r\n          movieList[movieList.length] = movie.movie_id;\r\n        });\r\n        localStorage.setItem(\"Razzlers_Subscribed_Movies\", JSON.stringify(movieList));\r\n      } else {\r\n        localStorage.setItem(\"Razzlers_Subscribed_Movies\", null);\r\n      }\r\n      resolve(true);\r\n    });\r\n  });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}