{"ast":null,"code":"import _classCallCheck from \"D:\\\\RazParent\\\\RazzlersGithub\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\RazParent\\\\RazzlersGithub\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\RazParent\\\\RazzlersGithub\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\RazParent\\\\RazzlersGithub\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\RazParent\\\\RazzlersGithub\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\RazParent\\\\RazzlersGithub\\\\client\\\\src\\\\pages\\\\Episodes.js\";\nimport React from \"react\";\nimport '../style.css';\nimport EpisodeList from \"../HTMLComponents/EpisodeList\";\n\nvar utilFunc = require('../Helpers/UtilityFunctions');\n\nvar Episodes =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Episodes, _React$Component);\n\n  function Episodes(props) {\n    var _this;\n\n    _classCallCheck(this, Episodes);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Episodes).call(this, props));\n    _this.state = {\n      episodeList: 0,\n      id: 0,\n      showTitle: \"\"\n    };\n    checkParams().then(function (json) {\n      _this.setState({\n        id: json.id\n      });\n\n      var id = json.id;\n      utilFunc.getEpisodeList(id).then(function (result) {\n        _this.setState({\n          episodeList: result\n        });\n\n        var set = {};\n        getShowInfo(id).then(function (result) {\n          set = result;\n\n          _this.setState({\n            showTitle: set.title\n          });\n        });\n      });\n    });\n    return _this;\n  }\n\n  _createClass(Episodes, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          episodeList = _this$state.episodeList,\n          showTitle = _this$state.showTitle,\n          id = _this$state.id;\n      var isSubscribed = false;\n      var isUserLoggedIn = false;\n\n      if (window.localStorage.getItem(\"Razzlers_Username\") != null) {\n        isUserLoggedIn = true;\n      }\n\n      if (episodeList !== 0) {\n        var showList = JSON.parse(localStorage.getItem(\"Razzlers_Subscribed_Shows\"));\n\n        if (showList !== null) {\n          isSubscribed = showList.includes(parseInt(id, 10));\n        }\n\n        if (!isSubscribed) {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            className: \"centerText\",\n            hidden: isSubscribed,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52\n            },\n            __self: this\n          }, React.createElement(\"font\", {\n            color: \"white\",\n            size: \"50\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52\n            },\n            __self: this\n          }, \"Subscribe to See Episodes\")), React.createElement(\"p\", {\n            className: \"centerText\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53\n            },\n            __self: this\n          }, React.createElement(\"font\", {\n            hidden: true,\n            id: \"capacityMessage\",\n            className: \"error\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54\n            },\n            __self: this\n          }, \"You have no more subscriptions left this month!\")), React.createElement(\"p\", {\n            className: \"centerText\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56\n            },\n            __self: this\n          }, React.createElement(\"font\", {\n            hidden: true,\n            id: \"invalidMessage1\",\n            className: \"error\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57\n            },\n            __self: this\n          }, \"Subscription Failed, please try again!\")), React.createElement(\"p\", {\n            className: \"centerText\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59\n            },\n            __self: this\n          }, React.createElement(\"font\", {\n            hidden: true,\n            id: \"invalidMessage2\",\n            className: \"error\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60\n            },\n            __self: this\n          }, \"You must be logged in to subscribe!\")), React.createElement(\"button\", {\n            hidden: isSubscribed,\n            className: \"subButton\",\n            onClick: function onClick() {\n              if (isUserLoggedIn) {\n                subscribe(false, id).then(function (result) {\n                  console.log(\"result\"); // result is either true or false based on if subbing went correctly or note\n\n                  if (result.result === \"true\") {\n                    // refresh page so they can watch the subbed show/movie\n                    window.location.reload();\n                  } else if (result.result === \"full\") {\n                    // they are at capacity for subscriptions!\n                    document.getElementById(\"capacityMessage\").hidden = false;\n                  } else {\n                    // subbing failed\n                    // display error message!\n                    document.getElementById(\"invalidMessage1\").hidden = false;\n                  }\n                });\n              } else {\n                document.getElementById(\"invalidMessage2\").hidden = false;\n              }\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63\n            },\n            __self: this\n          }, \"Subscribe\"));\n        } else {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 94\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            className: \"centerTextWithBackLonger\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95\n            },\n            __self: this\n          }, React.createElement(\"font\", {\n            color: \"black\",\n            size: \"1000\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95\n            },\n            __self: this\n          }, showTitle)), React.createElement(EpisodeList, {\n            episodes: episodeList,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 96\n            },\n            __self: this\n          }));\n        }\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Episodes;\n}(React.Component);\n\nfunction checkParams() {\n  return new Promise(function (resolve, reject) {\n    var url = window.location.href;\n    url = new URL(url);\n    var id = url.searchParams.get(\"id\");\n    resolve({\n      id: id\n    });\n  });\n}\n\nfunction getShowInfo(id) {\n  return new Promise(function (resolve, reject) {\n    var data = '{\"id\": \"' + id + '\"}';\n    data = JSON.parse(data);\n    var transport = {\n      headers: {\n        'Content-Type': \"application/json\"\n      },\n      method: \"PUT\",\n      body: JSON.stringify(data)\n    };\n    var url = \"http://razzlers.me:3001/api/getData/getShowInfo\";\n    fetch(url, transport).then(function (result) {\n      return result.json();\n    }).then(function (json) {\n      resolve(json);\n    }).catch(function (err) {\n      throw new Error(err);\n    });\n  });\n}\n\nfunction subscribe(isMovie, id) {\n  return new Promise(function (resolve, reject) {\n    // resolves with object in format {result: true|false} which comes directly from server\n    var username = window.localStorage.getItem(\"Razzlers_Username\");\n    var data = '{\"username\": \"' + username + '\", \"isMovie\": \"' + isMovie + '\", \"id\": \"' + id + '\"}';\n    data = JSON.parse(data);\n    var transport = {\n      headers: {\n        'Content-Type': \"application/json\"\n      },\n      method: \"PUT\",\n      body: JSON.stringify(data)\n    };\n    var url = \"//razzlers.me:3001/api/getData/subscribeToShow\";\n    fetch(url, transport).then(function (result) {\n      return result.json();\n    }).then(function (json) {\n      utilFunc.updateLocalSubscribedLists().then(function (output) {\n        resolve(json);\n      });\n    }).catch(function (err) {\n      throw new Error(err);\n    });\n  });\n}\n\nexport default Episodes;","map":{"version":3,"sources":["D:\\RazParent\\RazzlersGithub\\client\\src\\pages\\Episodes.js"],"names":["React","EpisodeList","utilFunc","require","Episodes","props","state","episodeList","id","showTitle","checkParams","then","json","setState","getEpisodeList","result","set","getShowInfo","title","isSubscribed","isUserLoggedIn","window","localStorage","getItem","showList","JSON","parse","includes","parseInt","subscribe","console","log","location","reload","document","getElementById","hidden","Component","Promise","resolve","reject","url","href","URL","searchParams","get","data","transport","headers","method","body","stringify","fetch","catch","err","Error","isMovie","username","updateLocalSubscribedLists","output"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport '../style.css';\r\nimport EpisodeList from \"../HTMLComponents/EpisodeList\";\r\n\r\nconst utilFunc = require('../Helpers/UtilityFunctions');\r\n\r\nclass Episodes extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tepisodeList: 0,\r\n\t\t\tid:0,\r\n\t\t\tshowTitle:\"\"\r\n\t\t};\r\n\r\n\t\tcheckParams().then(json => {\r\n\t\t\tthis.setState({\r\n\t\t\tid: json.id,\r\n\t\t\t});\r\n\r\n\t\t\tvar id = json.id;\r\n\t\t\tutilFunc.getEpisodeList(id).then(result => {\r\n\t\t\t\tthis.setState({ episodeList: result });\r\n\t\t\t\tvar set = {};\r\n\t\t\t\tgetShowInfo(id).then(result => {\r\n\t\t\t\t\tset = result;\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tshowTitle: set.title\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\t\r\n\trender() {\r\n\t\tconst {episodeList, showTitle, id} = this.state;var isSubscribed = false;\r\n\t\tvar isUserLoggedIn = false;\r\n\t\tif (window.localStorage.getItem(\"Razzlers_Username\") != null) {\r\n\t\t\tisUserLoggedIn = true;\r\n\t\t}\r\n\t\t\r\n\t\tif(episodeList !== 0) {\r\n\t\t\tvar showList = JSON.parse(localStorage.getItem(\"Razzlers_Subscribed_Shows\"));\r\n\t\t\tif (showList !== null) {\r\n\t\t\t\tisSubscribed = showList.includes(parseInt(id, 10));\r\n\t\t\t}\r\n\r\n\t\r\n\t\t\tif(!isSubscribed) {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<p className=\"centerText\" hidden = {isSubscribed}><font color = \"white\" size = \"50\">Subscribe to See Episodes</font></p>\r\n\t\t\t\t\t\t<p className=\"centerText\">\r\n\t\t\t\t\t\t\t<font hidden id=\"capacityMessage\" className=\"error\">You have no more subscriptions left this month!</font>\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<p className=\"centerText\">\r\n\t\t\t\t\t\t\t<font hidden id=\"invalidMessage1\" className=\"error\">Subscription Failed, please try again!</font>\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<p className=\"centerText\">\r\n\t\t\t\t\t\t\t<font hidden id=\"invalidMessage2\" className=\"error\">You must be logged in to subscribe!</font>\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<button hidden = {isSubscribed} className=\"subButton\" onClick = {() => {\r\n\t\t\t\t\t\t\tif(isUserLoggedIn) {\r\n\t\t\t\t\t\t\t\tsubscribe(false, id).then(result => {\r\n\t\t\t\t\t\t\t\t\tconsole.log(\"result\");\r\n\t\t\t\t\t\t\t\t\t// result is either true or false based on if subbing went correctly or note\r\n\t\t\t\t\t\t\t\t\tif(result.result === \"true\") {\r\n\t\t\t\t\t\t\t\t\t\t// refresh page so they can watch the subbed show/movie\r\n\t\t\t\t\t\t\t\t\t\twindow.location.reload();\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse if(result.result === \"full\") {\r\n\t\t\t\t\t\t\t\t\t\t// they are at capacity for subscriptions!\r\n\t\t\t\t\t\t\t\t\t\tdocument.getElementById(\"capacityMessage\").hidden=false;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t// subbing failed\r\n\t\t\t\t\t\t\t\t\t\t// display error message!\r\n\t\t\t\t\t\t\t\t\t\tdocument.getElementById(\"invalidMessage1\").hidden=false;\r\n\t\t\t\t\t\t\t\t\t}\t\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tdocument.getElementById(\"invalidMessage2\").hidden=false;\t\r\n\t\t\t\t\t\t\t}\t\r\n\t\t\t\t\t\t}}>Subscribe</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\telse {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<p className=\"centerTextWithBackLonger\"><font color =\"black\" size=\"1000\">{showTitle}</font></p>\r\n\t\t\t\t\t\t<EpisodeList episodes={episodeList}></EpisodeList>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn(<div></div>)\t\t\r\n\t}\r\n}\r\n\r\nfunction checkParams() {\r\n\treturn new Promise(function(resolve, reject) {\r\n\t\tvar url = window.location.href;\r\n\t\turl = new URL(url);\r\n\t\tvar id = url.searchParams.get(\"id\");\r\n\t\tresolve({id});\r\n\t});\r\n}\r\n\r\n\r\nfunction getShowInfo(id) {\r\n\treturn new Promise(function(resolve, reject) {\r\n\t\tvar data = '{\"id\": \"' + id + '\"}';\r\n\t\tdata = JSON.parse(data);\r\n\t\tvar transport = {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': \"application/json\"\r\n\t\t\t},\r\n\t\tmethod: \"PUT\",\r\n\t\tbody: JSON.stringify(data)\r\n\t\t};\r\n\t\tconst url = \"http://razzlers.me:3001/api/getData/getShowInfo\";\r\n\t\tfetch(url, transport).then(result => result.json()).then(json => {\r\n\t\t\tresolve(json);\r\n\t\t}).catch(err => {\r\n\t\tthrow new Error(err);\r\n\t\t});\r\n\t});\r\n}\r\n\r\nfunction subscribe(isMovie, id) {\r\n\treturn new Promise(function(resolve, reject) {\r\n\t\t// resolves with object in format {result: true|false} which comes directly from server\r\n\t\tvar username = window.localStorage.getItem(\"Razzlers_Username\");\r\n\t\tvar data = '{\"username\": \"' + username + '\", \"isMovie\": \"' + isMovie + '\", \"id\": \"' + id + '\"}';\r\n\t\tdata = JSON.parse(data);\r\n\t\tvar transport = {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': \"application/json\"\r\n\t\t\t},\r\n\t\t\tmethod: \"PUT\",\r\n\t\t\tbody: JSON.stringify(data)\r\n\t\t};\r\n\t\tconst url = \"//razzlers.me:3001/api/getData/subscribeToShow\";\r\n\t\tfetch(url, transport).then(result => result.json()).then(json => {\r\n\t\t\tutilFunc.updateLocalSubscribedLists().then(output => {\r\n\t\t\t\tresolve(json);\r\n\t\t\t});\r\n\t\t}).catch(err => {\r\n\t\t\tthrow new Error(err);\r\n\t\t});\r\n\t});\r\n}\r\n\r\nexport default Episodes\r\n"]},"metadata":{},"sourceType":"module"}