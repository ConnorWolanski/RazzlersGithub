{"ast":null,"code":"import _classCallCheck from \"D:\\\\RazParent\\\\RazzlersGithub\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\RazParent\\\\RazzlersGithub\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\RazParent\\\\RazzlersGithub\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\RazParent\\\\RazzlersGithub\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\RazParent\\\\RazzlersGithub\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\RazParent\\\\RazzlersGithub\\\\client\\\\src\\\\pages\\\\Login.js\";\nimport React from \"react\";\nimport '../style.css';\n\nvar utilFunc = require('../Helpers/UtilityFunctions');\n\nvar Login =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Login, _React$Component);\n\n  function Login() {\n    _classCallCheck(this, Login);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Login).apply(this, arguments));\n  }\n\n  _createClass(Login, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"bg2\",\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, React.createElement(\"font\", {\n        size: \"26\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, \"Log In\"), React.createElement(\"p\", {\n        hidden: true,\n        id: \"invalidMessage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, React.createElement(\"font\", {\n        className: \"error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, \"Username or password is invalid, please try again!\")), React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        className: \"input\",\n        id: \"usernameInput\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        className: \"input\",\n        id: \"passwordInput\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        id: \"loginButton\",\n        className: \"button2\",\n        onClick: function onClick() {\n          console.log(\"logging\");\n          loginVerification(document.getElementById(\"usernameInput\").value, document.getElementById(\"passwordInput\").value).then(function (result) {\n            console.log(result);\n\n            if (result === true) {\n              console.log(true);\n              window.location.href = 'home';\n            } else {\n              document.getElementById(\"invalidMessage\").hidden = false;\n            }\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"Login\"));\n    }\n  }]);\n\n  return Login;\n}(React.Component); // checks if username and password are valid with backend server\n\n\nfunction loginVerification(inUsername, inPassword) {\n  return new Promise(function (resolve, reject) {\n    var data = '{\"username\": \"' + inUsername + '\", \"password\": \"' + inPassword + '\"}';\n    data = JSON.parse(data);\n    var transport = {\n      headers: {\n        'Content-Type': \"application/json\"\n      },\n      method: \"POST\",\n      body: JSON.stringify(data)\n    };\n    var url = \"//localhost:3001/api/getData/checkLogin\";\n    fetch(url, transport).then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      var serverResponse = json.result;\n\n      if (serverResponse === \"true\") {\n        localStorage.setItem(\"Razzlers_Username\", inUsername);\n        utilFunc.getSubscribedShowList().then(function (result) {\n          var showList = [];\n          result.forEach(function (show) {\n            showList[showList.length] = show.tv_show_id;\n          });\n          localStorage.setItem(\"Razzlers_Subscribed_Shows\", JSON.stringify(showList));\n        });\n        utilFunc.getSubscribedMovieList().then(function (result) {\n          var movieList = [];\n          result.forEach(function (movie) {\n            movieList[movieList.length] = movie.movie_id;\n          });\n          localStorage.setItem(\"Razzlers_Subscribed_Movies\", JSON.stringify(movieList));\n          resolve(true);\n        });\n      } else {\n        // reject the user, tell invalid password try again\n        localStorage.setItem(\"Razzlers_Username\", null);\n        localStorage.setItem(\"Razzlers_Subscribed_Shows\", null);\n        localStorage.setItem(\"Razzlers_Subscribed_Movies\", null);\n        resolve(false);\n      }\n    }).catch(function (err) {\n      throw new Error(err);\n    });\n  });\n}\n\nexport default Login;","map":{"version":3,"sources":["D:\\RazParent\\RazzlersGithub\\client\\src\\pages\\Login.js"],"names":["React","utilFunc","require","Login","console","log","loginVerification","document","getElementById","value","then","result","window","location","href","hidden","Component","inUsername","inPassword","Promise","resolve","reject","data","JSON","parse","transport","headers","method","body","stringify","url","fetch","response","json","serverResponse","localStorage","setItem","getSubscribedShowList","showList","forEach","show","length","tv_show_id","getSubscribedMovieList","movieList","movie","movie_id","catch","err","Error"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport '../style.css';\r\n\r\nconst utilFunc = require('../Helpers/UtilityFunctions');\r\n\r\nclass Login extends React.Component\r\n{\r\n  render()\r\n  {\r\n    return(\r\n      <div className = \"bg2\" align = \"left\">\r\n        <font size= \"26\">Log In</font>\r\n        <p hidden id=\"invalidMessage\">\r\n          <font className=\"error\">Username or password is invalid, please try again!</font>\r\n        </p>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Username\"\r\n          className=\"input\"\r\n          id=\"usernameInput\"/>\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          className=\"input\"\r\n          id=\"passwordInput\"/>\r\n        <button type=\"submit\" id=\"loginButton\" className = \"button2\" onClick={() => {\r\n          console.log(\"logging\");\r\n          loginVerification(document.getElementById(\"usernameInput\").value, document.getElementById(\"passwordInput\").value).then(result => {\r\n            console.log(result);\r\n            if(result === true)\r\n            {\r\n              console.log(true);\r\n              window.location.href='home';\r\n            } else {\r\n              document.getElementById(\"invalidMessage\").hidden=false;\r\n            }\r\n          });\r\n        }}>Login</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n// checks if username and password are valid with backend server\r\nfunction loginVerification(inUsername, inPassword)\r\n{\r\n  return new Promise(function(resolve, reject)\r\n  {\r\n    var data = '{\"username\": \"' + inUsername + '\", \"password\": \"' + inPassword + '\"}';\r\n    data = JSON.parse(data);\r\n    var transport = {\r\n      headers: {\r\n        'Content-Type': \"application/json\"\r\n      },\r\n      method: \"POST\",\r\n      body: JSON.stringify(data)\r\n    };\r\n    const url = \"//localhost:3001/api/getData/checkLogin\";\r\n    fetch(url, transport).then(response => response.json()).then(json => {\r\n      var serverResponse = json.result;\r\n      if(serverResponse === \"true\")\r\n      {\r\n        localStorage.setItem(\"Razzlers_Username\", inUsername);\r\n        utilFunc.getSubscribedShowList().then(result => {\r\n          var showList = [];\r\n          result.forEach(function(show)\r\n          {\r\n            showList[showList.length] = show.tv_show_id;\r\n          });\r\n          localStorage.setItem(\"Razzlers_Subscribed_Shows\", JSON.stringify(showList));\r\n        });\r\n        utilFunc.getSubscribedMovieList().then(result =>\r\n        {\r\n          var movieList = [];\r\n          result.forEach(function(movie)\r\n          {\r\n            movieList[movieList.length] = movie.movie_id;\r\n          });\r\n          localStorage.setItem(\"Razzlers_Subscribed_Movies\", JSON.stringify(movieList));\r\n          resolve(true);\r\n        });\r\n      } else {\r\n        // reject the user, tell invalid password try again\r\n        localStorage.setItem(\"Razzlers_Username\", null);\r\n        localStorage.setItem(\"Razzlers_Subscribed_Shows\", null);\r\n        localStorage.setItem(\"Razzlers_Subscribed_Movies\", null);\r\n        resolve(false);\r\n      }\r\n    }).catch(err => {\r\n      throw new Error(err);\r\n    });\r\n  });\r\n}\r\n\r\nexport default Login\r\n"]},"metadata":{},"sourceType":"module"}