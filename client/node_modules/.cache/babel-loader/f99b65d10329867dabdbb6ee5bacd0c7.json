{"ast":null,"code":"import _classCallCheck from \"D:\\\\RazzlersGithub\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\RazzlersGithub\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\RazzlersGithub\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\RazzlersGithub\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\RazzlersGithub\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\RazzlersGithub\\\\client\\\\src\\\\App.js\";\nimport React from \"react\";\nimport BackgroundImage from './back2.png';\nimport './style.css'; //import templates from other places\n//import Header from \"./HTMLComponents/Header\";\n\nimport NavigationBar from \"./HTMLComponents/NavigationBar\";\nimport SignUp from \"./HTMLComponents/SignUp\"; //import MainContent from \"./HTMLComponents/MainContent\";\n//import Footer from \"./HTMLComponents/Footer\";\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props)); // state is used for holding data between classes.\n\n    _this.state = {\n      backgroundImage: BackgroundImage,\n      database: []\n    };\n    return _this;\n  } // gets called on client start, checks react's mount is successful.\n\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      document.title = \"Razzlers\";\n      this.fetchData();\n      console.log(\"Local Storage can be used: \" + this.checkLocalStorage());\n    } // fetchs\n\n  }, {\n    key: \"fetchData\",\n    value: function fetchData() {\n      var url = \"http://localhost:3001/api/getData\";\n      fetch(url, {\n        method: 'GET'\n      }).then(function (response) {\n        if (response.ok) {\n          response.json().then(function (json) {\n            // console.log(json[0].username + \": \" + json[0].first_name + \" \" + json[0].last_name);\n            console.log(json);\n          });\n        }\n      }).then();\n    } // checks if running HTML 5 for using localStorage on client side\n\n  }, {\n    key: \"checkLocalStorage\",\n    value: function checkLocalStorage() {\n      try {\n        return 'localStorage' in window && window['localStorage'] !== null;\n      } catch (e) {\n        console.log(e);\n        return false;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          backgroundImage = _this$state.backgroundImage,\n          logo = _this$state.logo,\n          database = _this$state.database;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: this.state.backgroundImage,\n        id: \"bg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), React.createElement(NavigationBar, {\n        params: this.props.params,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["D:\\RazzlersGithub\\client\\src\\App.js"],"names":["React","BackgroundImage","NavigationBar","SignUp","App","props","state","backgroundImage","database","document","title","fetchData","console","log","checkLocalStorage","url","fetch","method","then","response","ok","json","window","e","logo","params","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,OAAO,aAAP,C,CACA;AACA;;AAEA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAOC,MAAP,MAAmB,yBAAnB,C,CACA;AACA;;IAEMC,G;;;;;AAEJ,eAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,6EAAMA,KAAN,GADgB,CAEhB;;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,eAAe,EAAEN,eADN;AAEXO,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAHgB;AAOjB,G,CACD;;;;;wCACmB;AACjBC,MAAAA,QAAQ,CAACC,KAAT,GAAgB,UAAhB;AACA,WAAKC,SAAL;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,gCAAgC,KAAKC,iBAAL,EAA5C;AACD,K,CACD;;;;gCAEA;AACE,UAAMC,GAAG,GAAG,mCAAZ;AACAC,MAAAA,KAAK,CAACD,GAAD,EAAM;AAACE,QAAAA,MAAM,EAAE;AAAT,OAAN,CAAL,CACCC,IADD,CACM,UAAAC,QAAQ,EAAI;AAChB,YAAGA,QAAQ,CAACC,EAAZ,EACA;AACED,UAAAA,QAAQ,CAACE,IAAT,GAAgBH,IAAhB,CAAqB,UAAAG,IAAI,EAAI;AAC3B;AACAT,YAAAA,OAAO,CAACC,GAAR,CAAYQ,IAAZ;AACD,WAHD;AAID;AACF,OATD,EAUCH,IAVD;AAWD,K,CACD;;;;wCAEA;AACE,UAAG;AACD,eAAO,kBAAkBI,MAAlB,IAA4BA,MAAM,CAAC,cAAD,CAAN,KAA2B,IAA9D;AACD,OAFD,CAEE,OAAMC,CAAN,EAAS;AACTX,QAAAA,OAAO,CAACC,GAAR,CAAYU,CAAZ;AACA,eAAO,KAAP;AACD;AACF;;;6BAED;AAAA,wBAC2C,KAAKjB,KADhD;AAAA,UACQC,eADR,eACQA,eADR;AAAA,UACyBiB,IADzB,eACyBA,IADzB;AAAA,UAC+BhB,QAD/B,eAC+BA,QAD/B;AAEE,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,GAAG,EAAI,KAAKF,KAAL,CAAWC,eAAvB;AAAwC,QAAA,EAAE,EAAG,IAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,aAAD;AAAe,QAAA,MAAM,EAAE,KAAKF,KAAL,CAAWoB,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAMD;;;;EAnDezB,KAAK,CAAC0B,S;;AAqDxB,eAAetB,GAAf","sourcesContent":["import React from \"react\";\r\nimport BackgroundImage from './back2.png';\r\nimport './style.css';\r\n//import templates from other places\r\n//import Header from \"./HTMLComponents/Header\";\r\n\r\nimport NavigationBar from \"./HTMLComponents/NavigationBar\";\r\nimport SignUp from \"./HTMLComponents/SignUp\";\r\n//import MainContent from \"./HTMLComponents/MainContent\";\r\n//import Footer from \"./HTMLComponents/Footer\";\r\n\r\nclass App extends React.Component\r\n{\r\n  constructor(props){\r\n    super(props)\r\n    // state is used for holding data between classes.\r\n    this.state = {\r\n      backgroundImage: BackgroundImage,\r\n      database: []\r\n    }\r\n  }\r\n  // gets called on client start, checks react's mount is successful.\r\n  componentDidMount(){\r\n    document.title =\"Razzlers\";\r\n    this.fetchData();\r\n    console.log(\"Local Storage can be used: \" + this.checkLocalStorage());\r\n  }\r\n  // fetchs\r\n  fetchData()\r\n  {\r\n    const url = \"http://localhost:3001/api/getData\";\r\n    fetch(url, {method: 'GET'})\r\n    .then(response => {\r\n      if(response.ok)\r\n      {\r\n        response.json().then(json => {\r\n          // console.log(json[0].username + \": \" + json[0].first_name + \" \" + json[0].last_name);\r\n          console.log(json);\r\n        })\r\n      }\r\n    })\r\n    .then()\r\n  }\r\n  // checks if running HTML 5 for using localStorage on client side\r\n  checkLocalStorage()\r\n  {\r\n    try{\r\n      return 'localStorage' in window && window['localStorage'] !== null;\r\n    } catch(e) {\r\n      console.log(e);\r\n      return false;\r\n    }\r\n  }\r\n  render()\r\n  {\r\n    const{backgroundImage, logo, database} = this.state;\r\n    return (\r\n      <div>\r\n        <img src = {this.state.backgroundImage} id = \"bg\"/>\r\n        <NavigationBar params={this.props.params}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}