{"ast":null,"code":"exports.getMovieList = function () {\n  return getMovieList();\n};\n\nfunction getMovieList() {\n  return new Promise(function (resolve, reject) {\n    var transport = {\n      headers: {\n        'Content-Type': \"application/json\"\n      },\n      method: \"GET\"\n    };\n    var url = \"http://localhost:3001/api/getData/getMovieList\";\n    fetch(url, transport).then(function (result) {\n      return result.json();\n    }).then(function (json) {\n      resolve(json);\n    }).catch(function (err) {\n      throw new Error(err);\n    });\n  });\n}\n\nexports.checkSpecialChars = function (str) {\n  return new Promise(function (resolve, reject) {\n    str = str.replace(/\"/g, \"\\\\\\\"\");\n    str = str.replace(/'/g, \"\\\\\\\\\\'\");\n    str = str.replace(/\\ /g, \"\\\\\\\\\\\\\");\n    resolve(str);\n  });\n};\n\nexports.getUsersFriends = function (user) {\n  return getUsersFriends(user);\n};\n\nfunction getUsersFriends(user) {\n  return new Promise(function (resolve, reject) {\n    var data = '{\"username\": \"' + user + '\"}';\n    data = JSON.parse(data);\n    var transport = {\n      headers: {\n        'Content-Type': \"application/json\"\n      },\n      method: \"PUT\",\n      body: JSON.stringify(data)\n    };\n    var url = \"http://localhost:3001/api/getData/getUsersFriends\";\n    fetch(url, transport).then(function (result) {\n      return result.json();\n    }).then(function (json) {\n      //console.log(json);\n      resolve(json);\n    }).catch(function (err) {\n      throw new Error(err);\n    });\n  });\n}\n\nexports.getShowList = function () {\n  return getShowList();\n};\n\nfunction getShowList() {\n  return new Promise(function (resolve, reject) {\n    var transport = {\n      headers: {\n        'Content-Type': \"application/json\"\n      },\n      method: \"GET\"\n    };\n    var url = \"http://localhost:3001/api/getData/getShowList\";\n    fetch(url, transport).then(function (result) {\n      return result.json();\n    }).then(function (json) {\n      resolve(json);\n    }).catch(function (err) {\n      throw new Error(err);\n    });\n  });\n}\n\nexports.getSubscribedMovieList = function () {\n  return getSubscribedMList();\n};\n\nfunction getSubscribedMList() {\n  return new Promise(function (resolve, reject) {\n    var username = window.localStorage.getItem(\"Razzlers_Username\"); // check if username is undefined\n\n    var data = '{\"username\": \"' + username + '\"}';\n    data = JSON.parse(data);\n    var transport = {\n      headers: {\n        'Content-Type': \"application/json\"\n      },\n      method: \"PUT\",\n      body: JSON.stringify(data)\n    };\n    var url = \"http://localhost:3001/api/getData/getSubscribedMovies\";\n    fetch(url, transport).then(function (result) {\n      return result.json();\n    }).then(function (json) {\n      resolve(json);\n    }).catch(function (err) {\n      throw new Error(err);\n    });\n  });\n}\n\nexports.getSubscribedShowList = function () {\n  return getSubscribedSList();\n};\n\nfunction getSubscribedSList() {\n  return new Promise(function (resolve, reject) {\n    var username = window.localStorage.getItem(\"Razzlers_Username\"); // check if username is undefined\n\n    var data = '{\"username\": \"' + username + '\"}';\n    data = JSON.parse(data);\n    var transport = {\n      headers: {\n        'Content-Type': \"application/json\"\n      },\n      method: \"PUT\",\n      body: JSON.stringify(data)\n    };\n    var url = \"http://localhost:3001/api/getData/getSubscribedShows\";\n    fetch(url, transport).then(function (result) {\n      return result.json();\n    }).then(function (json) {\n      resolve(json);\n    }).catch(function (err) {\n      throw new Error(err);\n    });\n  });\n}\n\nexports.updateLocalSubscribedLists = function () {\n  return new Promise(function (resolve, reject) {\n    getSubscribedSList().then(function (result) {\n      var showList = [];\n\n      if (Array.isArray(result)) {\n        result.forEach(function (show) {\n          showList[showList.length] = show.tv_show_id;\n        });\n        localStorage.setItem(\"Razzlers_Subscribed_Shows\", JSON.stringify(showList));\n      } else {\n        localStorage.setItem(\"Razzlers_Subscribed_Shows\", null);\n      }\n    });\n    getSubscribedMList().then(function (result) {\n      var movieList = [];\n\n      if (Array.isArray(result)) {\n        result.forEach(function (movie) {\n          movieList[movieList.length] = movie.movie_id;\n        });\n        localStorage.setItem(\"Razzlers_Subscribed_Movies\", JSON.stringify(movieList));\n      } else {\n        localStorage.setItem(\"Razzlers_Subscribed_Movies\", null);\n      }\n\n      resolve(true);\n    });\n  });\n};\n\nexports.getUsersMessages = function (sender, recipient) {\n  return new Promise(function (resolve, reject) {\n    var data = '{\"sender\": \"' + sender + '\", \"recipient\": \"' + recipient + '\"}';\n    data = JSON.parse(data);\n    var transport = {\n      headers: {\n        'Content-Type': \"application/json\"\n      },\n      method: \"PUT\",\n      body: JSON.stringify(data)\n    };\n    var url = \"http://localhost:3001/api/getData/getUsersMessages\";\n    fetch(url, transport).then(function (result) {\n      return result.json();\n    }).then(function (json) {\n      resolve(json);\n    }).catch(function (err) {\n      throw new Error(err);\n    });\n  });\n};\n\nexports.getUnreadUsersMessages = function (user) {\n  return new Promise(function (resolve, reject) {\n    var data = '{\"user\": \"' + user + '\"}';\n    data = JSON.parse(data);\n    var transport = {\n      headers: {\n        'Content-Type': \"application/json\"\n      },\n      method: \"PUT\",\n      body: JSON.stringify(data)\n    };\n    var url = \"//localhost:3001/api/getData/getUnreadUsersMessages\";\n    fetch(url, transport).then(function (result) {\n      return result.json();\n    }).then(function (json) {\n      resolve(json);\n    }).catch(function (err) {\n      throw new Error(err);\n    });\n  });\n};\n\nexports.getUsernameFromID = function (id) {\n  return new Promise(function (resolve, reject) {\n    var data = '{\"id\": \"' + id + '\"}';\n    data = JSON.parse(data);\n    var transport = {\n      headers: {\n        'Content-Type': \"application/json\"\n      },\n      method: \"PUT\",\n      body: JSON.stringify(data)\n    };\n    var url = \"http://localhost:3001/api/getData/getUsernameOfID\";\n    fetch(url, transport).then(function (result) {\n      return result.json();\n    }).then(function (json) {\n      resolve(json);\n    }).catch(function (err) {\n      throw new Error(err);\n    });\n  });\n};\n\nexports.readUserMessages = function (sender, recipient) {\n  var data = '{\"sender\": \"' + sender + '\", \"recipient\": \"' + recipient + '\"}';\n  data = JSON.parse(data);\n  var transport = {\n    headers: {\n      'Content-Type': \"application/json\"\n    },\n    method: \"PUT\",\n    body: JSON.stringify(data)\n  };\n  var url = \"//localhost:3001/api/readUserMessages\";\n  fetch(url, transport).catch(function (err) {\n    throw new Error(err);\n  });\n};\n/*exports.forceUpdateMessages = function()\r\n{\r\n  var sender = window.localStorage.getItem(\"Razzlers_Username\");\r\n  var recip = document.getElementById(\"messageTitle\").innerHTML;\r\n  if(sender !== recip)\r\n  {\r\n    getUsersMessages(sender, recip).then(result => {\r\n      document.getElementById(\"textMessages\").innerHTML = JSON.stringify(result);\r\n    });\r\n  }\r\n}*/\n\n\nexports.getTopMovieList = function () {\n  return getTopMovieList();\n};\n\nfunction getTopMovieList() {\n  return new Promise(function (resolve, reject) {\n    var transport = {\n      headers: {\n        'Content-Type': \"application/json\"\n      },\n      method: \"GET\"\n    };\n    var url = \"http://localhost:3001/api/getData/getTopMovieList\";\n    fetch(url, transport).then(function (result) {\n      return result.json();\n    }).then(function (json) {\n      resolve(json);\n    }).catch(function (err) {\n      throw new Error(err);\n    });\n  });\n}\n\nexports.getTopShowList = function () {\n  return getTopShowList();\n};\n\nfunction getTopShowList() {\n  return new Promise(function (resolve, reject) {\n    var transport = {\n      headers: {\n        'Content-Type': \"application/json\"\n      },\n      method: \"GET\"\n    };\n    var url = \"http://localhost:3001/api/getData/getTopShowList\";\n    fetch(url, transport).then(function (result) {\n      return result.json();\n    }).then(function (json) {\n      resolve(json);\n    }).catch(function (err) {\n      throw new Error(err);\n    });\n  });\n}\n\nexports.getEpisodeList = function (id) {\n  return getEpisodeList(id);\n};\n\nfunction getEpisodeList(id) {\n  return new Promise(function (resolve, reject) {\n    var data = '{\"showID\": \"' + id + '\"}';\n    data = JSON.parse(data);\n    var transport = {\n      headers: {\n        'Content-Type': \"application/json\"\n      },\n      method: \"PUT\",\n      body: JSON.stringify(data)\n    };\n    var url = \"http://localhost:3001/api/getData/getEpisodeList\";\n    fetch(url, transport).then(function (result) {\n      return result.json();\n    }).then(function (json) {\n      //console.log(json);\n      resolve(json);\n    }).catch(function (err) {\n      throw new Error(err);\n    });\n  });\n} //Comment bodies\n\n\nexports.getMovieComments = function (id) {\n  return getMovieComments(id);\n};\n\nfunction getMovieComments(id) {\n  return new Promise(function (resolve, reject) {\n    var data = '{\"id\": \"' + id + '\"}';\n    data = JSON.parse(data);\n    var transport = {\n      headers: {\n        'Content-Type': \"application/json\"\n      },\n      method: \"PUT\",\n      body: JSON.stringify(data)\n    };\n    var url = \"http://localhost:3001/api/getData/getMovieCommentList\";\n    fetch(url, transport).then(function (result) {\n      return result.json();\n    }).then(function (json) {\n      //console.log(json);\n      resolve(json);\n    }).catch(function (err) {\n      throw new Error(err);\n    });\n  });\n}\n\nexports.getShowComments = function (id) {\n  return getShowComments(id);\n};\n\nfunction getShowComments(id) {\n  return new Promise(function (resolve, reject) {\n    var data = '{\"id\": \"' + id + '\"}';\n    data = JSON.parse(data);\n    var transport = {\n      headers: {\n        'Content-Type': \"application/json\"\n      },\n      method: \"PUT\",\n      body: JSON.stringify(data)\n    };\n    var url = \"http://localhost:3001/api/getData/getShowCommentList\";\n    fetch(url, transport).then(function (result) {\n      return result.json();\n    }).then(function (json) {\n      //console.log(json);\n      resolve(json);\n    }).catch(function (err) {\n      throw new Error(err);\n    });\n  });\n}\n\nexports.getEpisodeComments = function (id) {\n  return getEpisodeComments(id);\n};\n\nfunction getEpisodeComments(id) {\n  return new Promise(function (resolve, reject) {\n    var data = '{\"id\": \"' + id + '\"}';\n    data = JSON.parse(data);\n    var transport = {\n      headers: {\n        'Content-Type': \"application/json\"\n      },\n      method: \"PUT\",\n      body: JSON.stringify(data)\n    };\n    var url = \"http://localhost:3001/api/getData/getEpisodeCommentList\";\n    fetch(url, transport).then(function (result) {\n      return result.json();\n    }).then(function (json) {\n      //console.log(json);\n      resolve(json);\n    }).catch(function (err) {\n      throw new Error(err);\n    });\n  });\n} //Comment usernames\n\n\nexports.getMovieCommentsUsername = function (id) {\n  return getMovieCommentsUsername(id);\n};\n\nfunction getMovieCommentsUsername(id) {\n  return new Promise(function (resolve, reject) {\n    var data = '{\"id\": \"' + id + '\"}';\n    data = JSON.parse(data);\n    var transport = {\n      headers: {\n        'Content-Type': \"application/json\"\n      },\n      method: \"PUT\",\n      body: JSON.stringify(data)\n    };\n    var url = \"http://localhost:3001/api/getData/getMovieCommentUsername\";\n    fetch(url, transport).then(function (result) {\n      return result.json();\n    }).then(function (json) {\n      //console.log(json);\n      resolve(json);\n    }).catch(function (err) {\n      throw new Error(err);\n    });\n  });\n}\n\nexports.getShowCommentsUsername = function (id) {\n  return getShowCommentsUsername(id);\n};\n\nfunction getShowCommentsUsername(id) {\n  return new Promise(function (resolve, reject) {\n    var data = '{\"id\": \"' + id + '\"}';\n    data = JSON.parse(data);\n    var transport = {\n      headers: {\n        'Content-Type': \"application/json\"\n      },\n      method: \"PUT\",\n      body: JSON.stringify(data)\n    };\n    var url = \"http://localhost:3001/api/getData/getShowCommentUsername\";\n    fetch(url, transport).then(function (result) {\n      return result.json();\n    }).then(function (json) {\n      //console.log(json);\n      resolve(json);\n    }).catch(function (err) {\n      throw new Error(err);\n    });\n  });\n}\n\nexports.getEpisodeCommentsUsername = function (id) {\n  return getEpisodeCommentsUsername(id);\n};\n\nfunction getEpisodeCommentsUsername(id) {\n  return new Promise(function (resolve, reject) {\n    var data = '{\"id\": \"' + id + '\"}';\n    data = JSON.parse(data);\n    var transport = {\n      headers: {\n        'Content-Type': \"application/json\"\n      },\n      method: \"PUT\",\n      body: JSON.stringify(data)\n    };\n    var url = \"http://localhost:3001/api/getData/getEpisodeCommentUsername\";\n    fetch(url, transport).then(function (result) {\n      return result.json();\n    }).then(function (json) {\n      //console.log(json);\n      resolve(json);\n    }).catch(function (err) {\n      throw new Error(err);\n    });\n  });\n} //Comment times\n\n\nexports.getMovieCommentsTime = function (id) {\n  return getMovieCommentsTime(id);\n};\n\nfunction getMovieCommentsTime(id) {\n  return new Promise(function (resolve, reject) {\n    var data = '{\"id\": \"' + id + '\"}';\n    data = JSON.parse(data);\n    var transport = {\n      headers: {\n        'Content-Type': \"application/json\"\n      },\n      method: \"PUT\",\n      body: JSON.stringify(data)\n    };\n    var url = \"http://localhost:3001/api/getData/getMovieCommentTime\";\n    fetch(url, transport).then(function (result) {\n      return result.json();\n    }).then(function (json) {\n      //console.log(json);\n      resolve(json);\n    }).catch(function (err) {\n      throw new Error(err);\n    });\n  });\n}\n\nexports.getShowCommentsTime = function (id) {\n  return getShowCommentsTime(id);\n};\n\nfunction getShowCommentsTime(id) {\n  return new Promise(function (resolve, reject) {\n    var data = '{\"id\": \"' + id + '\"}';\n    data = JSON.parse(data);\n    var transport = {\n      headers: {\n        'Content-Type': \"application/json\"\n      },\n      method: \"PUT\",\n      body: JSON.stringify(data)\n    };\n    var url = \"http://localhost:3001/api/getData/getShowCommentTime\";\n    fetch(url, transport).then(function (result) {\n      return result.json();\n    }).then(function (json) {\n      //console.log(json);\n      resolve(json);\n    }).catch(function (err) {\n      throw new Error(err);\n    });\n  });\n}\n\nexports.getEpisodeCommentsTime = function (id) {\n  return getEpisodeCommentsTime(id);\n};\n\nfunction getEpisodeCommentsTime(id) {\n  return new Promise(function (resolve, reject) {\n    var data = '{\"id\": \"' + id + '\"}';\n    data = JSON.parse(data);\n    var transport = {\n      headers: {\n        'Content-Type': \"application/json\"\n      },\n      method: \"PUT\",\n      body: JSON.stringify(data)\n    };\n    var url = \"http://localhost:3001/api/getData/getEpisodeCommentTime\";\n    fetch(url, transport).then(function (result) {\n      return result.json();\n    }).then(function (json) {\n      //console.log(json);\n      resolve(json);\n    }).catch(function (err) {\n      throw new Error(err);\n    });\n  });\n} //Comment date\n\n\nexports.getMovieCommentsDate = function (id) {\n  return getMovieCommentsDate(id);\n};\n\nfunction getMovieCommentsDate(id) {\n  return new Promise(function (resolve, reject) {\n    var data = '{\"id\": \"' + id + '\"}';\n    data = JSON.parse(data);\n    var transport = {\n      headers: {\n        'Content-Type': \"application/json\"\n      },\n      method: \"PUT\",\n      body: JSON.stringify(data)\n    };\n    var url = \"http://localhost:3001/api/getData/getMovieCommentDate\";\n    fetch(url, transport).then(function (result) {\n      return result.json();\n    }).then(function (json) {\n      //console.log(json);\n      resolve(json);\n    }).catch(function (err) {\n      throw new Error(err);\n    });\n  });\n}\n\nexports.getShowCommentsDate = function (id) {\n  return getShowCommentsDate(id);\n};\n\nfunction getShowCommentsDate(id) {\n  return new Promise(function (resolve, reject) {\n    var data = '{\"id\": \"' + id + '\"}';\n    data = JSON.parse(data);\n    var transport = {\n      headers: {\n        'Content-Type': \"application/json\"\n      },\n      method: \"PUT\",\n      body: JSON.stringify(data)\n    };\n    var url = \"http://localhost:3001/api/getData/getShowCommentDate\";\n    fetch(url, transport).then(function (result) {\n      return result.json();\n    }).then(function (json) {\n      //console.log(json);\n      resolve(json);\n    }).catch(function (err) {\n      throw new Error(err);\n    });\n  });\n}\n\nexports.getEpisodeCommentsDate = function (id) {\n  return getEpisodeCommentsDate(id);\n};\n\nfunction getEpisodeCommentsDate(id) {\n  return new Promise(function (resolve, reject) {\n    var data = '{\"id\": \"' + id + '\"}';\n    data = JSON.parse(data);\n    var transport = {\n      headers: {\n        'Content-Type': \"application/json\"\n      },\n      method: \"PUT\",\n      body: JSON.stringify(data)\n    };\n    var url = \"http://localhost:3001/api/getData/getEpisodeCommentDate\";\n    fetch(url, transport).then(function (result) {\n      return result.json();\n    }).then(function (json) {\n      //console.log(json);\n      resolve(json);\n    }).catch(function (err) {\n      throw new Error(err);\n    });\n  });\n}","map":{"version":3,"sources":["C:\\Users\\Connor\\RazzlersGithub\\client\\src\\Helpers\\UtilityFunctions.js"],"names":["exports","getMovieList","Promise","resolve","reject","transport","headers","method","url","fetch","then","result","json","catch","err","Error","checkSpecialChars","str","replace","getUsersFriends","user","data","JSON","parse","body","stringify","getShowList","getSubscribedMovieList","getSubscribedMList","username","window","localStorage","getItem","getSubscribedShowList","getSubscribedSList","updateLocalSubscribedLists","showList","Array","isArray","forEach","show","length","tv_show_id","setItem","movieList","movie","movie_id","getUsersMessages","sender","recipient","getUnreadUsersMessages","getUsernameFromID","id","readUserMessages","getTopMovieList","getTopShowList","getEpisodeList","getMovieComments","getShowComments","getEpisodeComments","getMovieCommentsUsername","getShowCommentsUsername","getEpisodeCommentsUsername","getMovieCommentsTime","getShowCommentsTime","getEpisodeCommentsTime","getMovieCommentsDate","getShowCommentsDate","getEpisodeCommentsDate"],"mappings":"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","sourcesContent":["exports.getMovieList = function()\r\n{\r\n  return getMovieList();\r\n}\r\n\r\nfunction getMovieList()\r\n{\r\n  return new Promise(function(resolve, reject)\r\n  {\r\n    var transport = {\r\n      headers: {\r\n        'Content-Type': \"application/json\"\r\n      },\r\n      method: \"GET\"\r\n    };\r\n    const url = \"http://localhost:3001/api/getData/getMovieList\";\r\n    fetch(url, transport).then(result => result.json()).then(json => {\r\n      resolve(json);\r\n    }).catch(err => {\r\n      throw new Error(err);\r\n    });\r\n  });\r\n}\r\nexports.checkSpecialChars= function(str){\r\n  return new Promise(function(resolve, reject){\r\n    str = str.replace(/\"/g, \"\\\\\\\"\");\r\n    str = str.replace(/'/g, \"\\\\\\\\\\'\");\r\n    str = str.replace(/\\ /g, \"\\\\\\\\\\\\\");\r\n    resolve(str);\r\n  })\r\n}\r\n\r\nexports.getUsersFriends = function(user)\r\n{\r\n  return getUsersFriends(user);\r\n}\r\n\r\nfunction getUsersFriends(user) {\r\n  return new Promise(function(resolve, reject) {\r\n    var data = '{\"username\": \"' + user + '\"}';\r\n    data = JSON.parse(data);\r\n    var transport = {\r\n      headers: {\r\n        'Content-Type': \"application/json\"\r\n      },\r\n      method: \"PUT\",\r\n      body: JSON.stringify(data)\r\n    };\r\n    const url = \"http://localhost:3001/api/getData/getUsersFriends\";\r\n    fetch(url, transport).then(result => result.json()).then(json => {\r\n      //console.log(json);\r\n      resolve(json);\r\n    }).catch(err => {\r\n      throw new Error(err);\r\n    });\r\n  });\r\n}\r\n\r\nexports.getShowList = function()\r\n{\r\n  return getShowList();\r\n}\r\n\r\n\r\nfunction getShowList()\r\n{\r\n  return new Promise(function(resolve, reject)\r\n  {\r\n    var transport = {\r\n      headers: {\r\n        'Content-Type': \"application/json\"\r\n      },\r\n      method: \"GET\"\r\n    };\r\n    const url = \"http://localhost:3001/api/getData/getShowList\";\r\n    fetch(url, transport).then(result => result.json()).then(json => {\r\n      resolve(json);\r\n    }).catch(err => {\r\n      throw new Error(err);\r\n    });\r\n  });\r\n}\r\n\r\nexports.getSubscribedMovieList = function()\r\n{\r\n  return getSubscribedMList();\r\n}\r\n\r\nfunction getSubscribedMList()\r\n{\r\n  return new Promise(function(resolve, reject)\r\n  {\r\n    var username = window.localStorage.getItem(\"Razzlers_Username\");\r\n    // check if username is undefined\r\n    var data = '{\"username\": \"' + username + '\"}';\r\n    data = JSON.parse(data);\r\n    var transport = {\r\n      headers: {\r\n        'Content-Type': \"application/json\"\r\n      },\r\n      method: \"PUT\",\r\n      body: JSON.stringify(data)\r\n    };\r\n    const url = \"http://localhost:3001/api/getData/getSubscribedMovies\";\r\n    fetch(url, transport).then(result => result.json()).then(json => {\r\n      resolve(json);\r\n    }).catch(err => {\r\n      throw new Error(err);\r\n    });\r\n  });\r\n}\r\n\r\nexports.getSubscribedShowList = function()\r\n{\r\n  return getSubscribedSList();\r\n}\r\n\r\nfunction getSubscribedSList()\r\n{\r\n  return new Promise(function(resolve, reject)\r\n  {\r\n    var username = window.localStorage.getItem(\"Razzlers_Username\");\r\n    // check if username is undefined\r\n    var data = '{\"username\": \"' + username + '\"}';\r\n    data = JSON.parse(data);\r\n    var transport = {\r\n      headers: {\r\n        'Content-Type': \"application/json\"\r\n      },\r\n      method: \"PUT\",\r\n      body: JSON.stringify(data)\r\n    };\r\n    const url = \"http://localhost:3001/api/getData/getSubscribedShows\";\r\n    fetch(url, transport).then(result => result.json()).then(json => {\r\n      resolve(json);\r\n    }).catch(err => {\r\n      throw new Error(err);\r\n    });\r\n  });\r\n}\r\n\r\nexports.updateLocalSubscribedLists = function()\r\n{\r\n  return new Promise(function(resolve, reject)\r\n  {\r\n    getSubscribedSList().then(result => {\r\n      var showList = [];\r\n      if(Array.isArray(result))\r\n      {\r\n        result.forEach(function(show)\r\n        {\r\n          showList[showList.length] = show.tv_show_id;\r\n        });\r\n        localStorage.setItem(\"Razzlers_Subscribed_Shows\", JSON.stringify(showList));\r\n      } else {\r\n        localStorage.setItem(\"Razzlers_Subscribed_Shows\", null);\r\n      }\r\n    });\r\n    getSubscribedMList().then(result =>\r\n    {\r\n      var movieList = [];\r\n      if(Array.isArray(result))\r\n      {\r\n        result.forEach(function(movie)\r\n        {\r\n          movieList[movieList.length] = movie.movie_id;\r\n        });\r\n        localStorage.setItem(\"Razzlers_Subscribed_Movies\", JSON.stringify(movieList));\r\n      } else {\r\n        localStorage.setItem(\"Razzlers_Subscribed_Movies\", null);\r\n      }\r\n      resolve(true);\r\n    });\r\n  });\r\n}\r\n\r\nexports.getUsersMessages = function(sender, recipient)\r\n{\r\n  return new Promise(function(resolve, reject) {\r\n    var data = '{\"sender\": \"' + sender + '\", \"recipient\": \"' + recipient + '\"}';\r\n    data = JSON.parse(data);\r\n    var transport = {\r\n      headers: {\r\n        'Content-Type': \"application/json\"\r\n      },\r\n      method: \"PUT\",\r\n      body: JSON.stringify(data)\r\n    };\r\n    const url = \"http://localhost:3001/api/getData/getUsersMessages\";\r\n    fetch(url, transport).then(result => result.json()).then(json => {\r\n      resolve(json);\r\n    }).catch(err => {\r\n      throw new Error(err);\r\n    });\r\n  });\r\n}\r\nexports.getUnreadUsersMessages = function(user)\r\n{\r\n  return new Promise(function(resolve, reject) {\r\n    var data = '{\"user\": \"' + user + '\"}';\r\n    data = JSON.parse(data);\r\n    var transport = {\r\n      headers: {\r\n        'Content-Type': \"application/json\"\r\n      },\r\n      method: \"PUT\",\r\n      body: JSON.stringify(data)\r\n    };\r\n    const url = \"//localhost:3001/api/getData/getUnreadUsersMessages\";\r\n    fetch(url, transport).then(result => result.json()).then(json => {\r\n      resolve(json);\r\n    }).catch(err => {\r\n      throw new Error(err);\r\n    });\r\n  });\r\n}\r\n\r\nexports.getUsernameFromID = function(id)\r\n{\r\n  return new Promise(function(resolve, reject) {\r\n    var data = '{\"id\": \"' + id + '\"}';\r\n    data = JSON.parse(data);\r\n    var transport = {\r\n      headers: {\r\n        'Content-Type': \"application/json\"\r\n      },\r\n      method: \"PUT\",\r\n      body: JSON.stringify(data)\r\n    };\r\n    const url = \"http://localhost:3001/api/getData/getUsernameOfID\";\r\n    fetch(url, transport).then(result => result.json()).then(json => {\r\n      resolve(json);\r\n    }).catch(err => {\r\n      throw new Error(err);\r\n    });\r\n  });\r\n}\r\n\r\nexports.readUserMessages = function(sender, recipient){\r\n    var data = '{\"sender\": \"' + sender + '\", \"recipient\": \"' + recipient + '\"}';\r\n    data = JSON.parse(data);\r\n    var transport = {\r\n      headers: {\r\n        'Content-Type': \"application/json\"\r\n      },\r\n      method: \"PUT\",\r\n      body: JSON.stringify(data)\r\n    };\r\n    const url = \"//localhost:3001/api/readUserMessages\";\r\n    fetch(url, transport).catch(err => {\r\n      throw new Error(err);\r\n    });\r\n}\r\n/*exports.forceUpdateMessages = function()\r\n{\r\n  var sender = window.localStorage.getItem(\"Razzlers_Username\");\r\n  var recip = document.getElementById(\"messageTitle\").innerHTML;\r\n  if(sender !== recip)\r\n  {\r\n    getUsersMessages(sender, recip).then(result => {\r\n      document.getElementById(\"textMessages\").innerHTML = JSON.stringify(result);\r\n    });\r\n  }\r\n}*/\r\n\r\nexports.getTopMovieList = function()\r\n{\r\n  return getTopMovieList();\r\n}\r\n\r\nfunction getTopMovieList()\r\n{\r\n  return new Promise(function(resolve, reject)\r\n  {\r\n    var transport = {\r\n      headers: {\r\n        'Content-Type': \"application/json\"\r\n      },\r\n      method: \"GET\"\r\n    };\r\n    const url = \"http://localhost:3001/api/getData/getTopMovieList\";\r\n    fetch(url, transport).then(result => result.json()).then(json => {\r\n      resolve(json);\r\n    }).catch(err => {\r\n      throw new Error(err);\r\n    });\r\n  });\r\n}\r\n\r\nexports.getTopShowList = function()\r\n{\r\n  return getTopShowList();\r\n}\r\n\r\nfunction getTopShowList()\r\n{\r\n  return new Promise(function(resolve, reject)\r\n  {\r\n    var transport = {\r\n      headers: {\r\n        'Content-Type': \"application/json\"\r\n      },\r\n      method: \"GET\"\r\n    };\r\n    const url = \"http://localhost:3001/api/getData/getTopShowList\";\r\n    fetch(url, transport).then(result => result.json()).then(json => {\r\n      resolve(json);\r\n    }).catch(err => {\r\n      throw new Error(err);\r\n    });\r\n  });\r\n}\r\n\r\nexports.getEpisodeList = function(id)\r\n{\r\n  return getEpisodeList(id);\r\n}\r\n\r\n\r\nfunction getEpisodeList(id)\r\n{\r\n  return new Promise(function(resolve, reject) {\r\n\tvar data = '{\"showID\": \"' + id + '\"}';\r\n\tdata = JSON.parse(data);\r\n    var transport = {\r\n      headers: {\r\n        'Content-Type': \"application/json\"\r\n      },\r\n      method: \"PUT\",\r\n\t  body: JSON.stringify(data)\r\n    };\r\n    const url = \"http://localhost:3001/api/getData/getEpisodeList\";\r\n    fetch(url, transport).then(result => result.json()).then(json => {\r\n      //console.log(json);\r\n      resolve(json);\r\n    }).catch(err => {\r\n      throw new Error(err);\r\n    });\r\n  });\r\n}\r\n\r\n//Comment bodies\r\nexports.getMovieComments = function(id)\r\n{\r\n  return getMovieComments(id);\r\n}\r\n\r\nfunction getMovieComments(id) {\r\n  return new Promise(function(resolve, reject) {\r\n    var data = '{\"id\": \"' + id + '\"}';\r\n    data = JSON.parse(data);\r\n    var transport = {\r\n      headers: {\r\n        'Content-Type': \"application/json\"\r\n      },\r\n      method: \"PUT\",\r\n      body: JSON.stringify(data)\r\n    };\r\n    const url = \"http://localhost:3001/api/getData/getMovieCommentList\";\r\n    fetch(url, transport).then(result => result.json()).then(json => {\r\n      //console.log(json);\r\n      resolve(json);\r\n    }).catch(err => {\r\n      throw new Error(err);\r\n    });\r\n  });\r\n}\r\n\r\nexports.getShowComments = function(id)\r\n{\r\n  return getShowComments(id);\r\n}\r\n\r\nfunction getShowComments(id) {\r\n  return new Promise(function(resolve, reject) {\r\n    var data = '{\"id\": \"' + id + '\"}';\r\n    data = JSON.parse(data);\r\n    var transport = {\r\n      headers: {\r\n        'Content-Type': \"application/json\"\r\n      },\r\n      method: \"PUT\",\r\n      body: JSON.stringify(data)\r\n    };\r\n    const url = \"http://localhost:3001/api/getData/getShowCommentList\";\r\n    fetch(url, transport).then(result => result.json()).then(json => {\r\n      //console.log(json);\r\n      resolve(json);\r\n    }).catch(err => {\r\n      throw new Error(err);\r\n    });\r\n  });\r\n}\r\n\r\nexports.getEpisodeComments = function(id)\r\n{\r\n  return getEpisodeComments(id);\r\n}\r\n\r\nfunction getEpisodeComments(id) {\r\n  return new Promise(function(resolve, reject) {\r\n    var data = '{\"id\": \"' + id + '\"}';\r\n    data = JSON.parse(data);\r\n    var transport = {\r\n      headers: {\r\n        'Content-Type': \"application/json\"\r\n      },\r\n      method: \"PUT\",\r\n      body: JSON.stringify(data)\r\n    };\r\n    const url = \"http://localhost:3001/api/getData/getEpisodeCommentList\";\r\n    fetch(url, transport).then(result => result.json()).then(json => {\r\n      //console.log(json);\r\n      resolve(json);\r\n    }).catch(err => {\r\n      throw new Error(err);\r\n    });\r\n  });\r\n}\r\n\r\n//Comment usernames\r\nexports.getMovieCommentsUsername = function(id)\r\n{\r\n  return getMovieCommentsUsername(id);\r\n}\r\n\r\nfunction getMovieCommentsUsername(id) {\r\n  return new Promise(function(resolve, reject) {\r\n    var data = '{\"id\": \"' + id + '\"}';\r\n    data = JSON.parse(data);\r\n    var transport = {\r\n      headers: {\r\n        'Content-Type': \"application/json\"\r\n      },\r\n      method: \"PUT\",\r\n      body: JSON.stringify(data)\r\n    };\r\n    const url = \"http://localhost:3001/api/getData/getMovieCommentUsername\";\r\n    fetch(url, transport).then(result => result.json()).then(json => {\r\n      //console.log(json);\r\n      resolve(json);\r\n    }).catch(err => {\r\n      throw new Error(err);\r\n    });\r\n  });\r\n}\r\n\r\nexports.getShowCommentsUsername = function(id)\r\n{\r\n  return getShowCommentsUsername(id);\r\n}\r\n\r\nfunction getShowCommentsUsername(id) {\r\n  return new Promise(function(resolve, reject) {\r\n    var data = '{\"id\": \"' + id + '\"}';\r\n    data = JSON.parse(data);\r\n    var transport = {\r\n      headers: {\r\n        'Content-Type': \"application/json\"\r\n      },\r\n      method: \"PUT\",\r\n      body: JSON.stringify(data)\r\n    };\r\n    const url = \"http://localhost:3001/api/getData/getShowCommentUsername\";\r\n    fetch(url, transport).then(result => result.json()).then(json => {\r\n      //console.log(json);\r\n      resolve(json);\r\n    }).catch(err => {\r\n      throw new Error(err);\r\n    });\r\n  });\r\n}\r\n\r\nexports.getEpisodeCommentsUsername = function(id)\r\n{\r\n  return getEpisodeCommentsUsername(id);\r\n}\r\n\r\nfunction getEpisodeCommentsUsername(id) {\r\n  return new Promise(function(resolve, reject) {\r\n    var data = '{\"id\": \"' + id + '\"}';\r\n    data = JSON.parse(data);\r\n    var transport = {\r\n      headers: {\r\n        'Content-Type': \"application/json\"\r\n      },\r\n      method: \"PUT\",\r\n      body: JSON.stringify(data)\r\n    };\r\n    const url = \"http://localhost:3001/api/getData/getEpisodeCommentUsername\";\r\n    fetch(url, transport).then(result => result.json()).then(json => {\r\n      //console.log(json);\r\n      resolve(json);\r\n    }).catch(err => {\r\n      throw new Error(err);\r\n    });\r\n  });\r\n}\r\n\r\n//Comment times\r\nexports.getMovieCommentsTime = function(id)\r\n{\r\n  return getMovieCommentsTime(id);\r\n}\r\n\r\nfunction getMovieCommentsTime(id) {\r\n  return new Promise(function(resolve, reject) {\r\n    var data = '{\"id\": \"' + id + '\"}';\r\n    data = JSON.parse(data);\r\n    var transport = {\r\n      headers: {\r\n        'Content-Type': \"application/json\"\r\n      },\r\n      method: \"PUT\",\r\n      body: JSON.stringify(data)\r\n    };\r\n    const url = \"http://localhost:3001/api/getData/getMovieCommentTime\";\r\n    fetch(url, transport).then(result => result.json()).then(json => {\r\n      //console.log(json);\r\n      resolve(json);\r\n    }).catch(err => {\r\n      throw new Error(err);\r\n    });\r\n  });\r\n}\r\n\r\nexports.getShowCommentsTime = function(id)\r\n{\r\n  return getShowCommentsTime(id);\r\n}\r\n\r\nfunction getShowCommentsTime(id) {\r\n  return new Promise(function(resolve, reject) {\r\n    var data = '{\"id\": \"' + id + '\"}';\r\n    data = JSON.parse(data);\r\n    var transport = {\r\n      headers: {\r\n        'Content-Type': \"application/json\"\r\n      },\r\n      method: \"PUT\",\r\n      body: JSON.stringify(data)\r\n    };\r\n    const url = \"http://localhost:3001/api/getData/getShowCommentTime\";\r\n    fetch(url, transport).then(result => result.json()).then(json => {\r\n      //console.log(json);\r\n      resolve(json);\r\n    }).catch(err => {\r\n      throw new Error(err);\r\n    });\r\n  });\r\n}\r\n\r\nexports.getEpisodeCommentsTime = function(id)\r\n{\r\n  return getEpisodeCommentsTime(id);\r\n}\r\n\r\nfunction getEpisodeCommentsTime(id) {\r\n  return new Promise(function(resolve, reject) {\r\n    var data = '{\"id\": \"' + id + '\"}';\r\n    data = JSON.parse(data);\r\n    var transport = {\r\n      headers: {\r\n        'Content-Type': \"application/json\"\r\n      },\r\n      method: \"PUT\",\r\n      body: JSON.stringify(data)\r\n    };\r\n    const url = \"http://localhost:3001/api/getData/getEpisodeCommentTime\";\r\n    fetch(url, transport).then(result => result.json()).then(json => {\r\n      //console.log(json);\r\n      resolve(json);\r\n    }).catch(err => {\r\n      throw new Error(err);\r\n    });\r\n  });\r\n}\r\n\r\n//Comment date\r\nexports.getMovieCommentsDate = function(id)\r\n{\r\n  return getMovieCommentsDate(id);\r\n}\r\n\r\nfunction getMovieCommentsDate(id) {\r\n  return new Promise(function(resolve, reject) {\r\n    var data = '{\"id\": \"' + id + '\"}';\r\n    data = JSON.parse(data);\r\n    var transport = {\r\n      headers: {\r\n        'Content-Type': \"application/json\"\r\n      },\r\n      method: \"PUT\",\r\n      body: JSON.stringify(data)\r\n    };\r\n    const url = \"http://localhost:3001/api/getData/getMovieCommentDate\";\r\n    fetch(url, transport).then(result => result.json()).then(json => {\r\n      //console.log(json);\r\n      resolve(json);\r\n    }).catch(err => {\r\n      throw new Error(err);\r\n    });\r\n  });\r\n}\r\n\r\nexports.getShowCommentsDate = function(id)\r\n{\r\n  return getShowCommentsDate(id);\r\n}\r\n\r\nfunction getShowCommentsDate(id) {\r\n  return new Promise(function(resolve, reject) {\r\n    var data = '{\"id\": \"' + id + '\"}';\r\n    data = JSON.parse(data);\r\n    var transport = {\r\n      headers: {\r\n        'Content-Type': \"application/json\"\r\n      },\r\n      method: \"PUT\",\r\n      body: JSON.stringify(data)\r\n    };\r\n    const url = \"http://localhost:3001/api/getData/getShowCommentDate\";\r\n    fetch(url, transport).then(result => result.json()).then(json => {\r\n      //console.log(json);\r\n      resolve(json);\r\n    }).catch(err => {\r\n      throw new Error(err);\r\n    });\r\n  });\r\n}\r\n\r\nexports.getEpisodeCommentsDate = function(id)\r\n{\r\n  return getEpisodeCommentsDate(id);\r\n}\r\n\r\nfunction getEpisodeCommentsDate(id) {\r\n  return new Promise(function(resolve, reject) {\r\n    var data = '{\"id\": \"' + id + '\"}';\r\n    data = JSON.parse(data);\r\n    var transport = {\r\n      headers: {\r\n        'Content-Type': \"application/json\"\r\n      },\r\n      method: \"PUT\",\r\n      body: JSON.stringify(data)\r\n    };\r\n    const url = \"http://localhost:3001/api/getData/getEpisodeCommentDate\";\r\n    fetch(url, transport).then(result => result.json()).then(json => {\r\n      //console.log(json);\r\n      resolve(json);\r\n    }).catch(err => {\r\n      throw new Error(err);\r\n    });\r\n  });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}