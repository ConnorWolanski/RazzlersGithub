{"ast":null,"code":"import _classCallCheck from \"D:\\\\RazzlersGithub\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\RazzlersGithub\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\RazzlersGithub\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\RazzlersGithub\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\RazzlersGithub\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\RazzlersGithub\\\\client\\\\src\\\\pages\\\\PlayVideo.js\";\nimport React from \"react\";\nimport '../style.css';\n\nvar utilFunc = require('../Helpers/UtilityFunctions');\n\nvar PlayVideo =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PlayVideo, _React$Component);\n\n  function PlayVideo(props) {\n    var _this;\n\n    _classCallCheck(this, PlayVideo);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PlayVideo).call(this, props));\n    _this.state = {\n      isMovie: false,\n      id: 0,\n      episodeId: 0,\n      name: \"\",\n      description: \"\",\n      rating: 0,\n      actors: \"\",\n      release_year: 0\n    };\n    checkParams().then(function (json) {\n      _this.setState({\n        isMovie: json.isMovie,\n        id: json.id,\n        episodeId: json.episodeId,\n        name: \"\",\n        description: \"\",\n        rating: 0,\n        actors: \"\",\n        release_year: 0\n      });\n\n      var isMovie = json.isMovie;\n      var id = json.id;\n      var episodeId = json.episodeId;\n      var set = {};\n\n      if (isMovie === \"true\") {\n        getVideoInfo(isMovie, id).then(function (result) {\n          set = result;\n\n          if (set.hasOwnProperty(\"result\")) {\n            // result from server didnt pull the correct file and it doesnt exist!\n            console.log(\"file doesnt exist!\");\n          } else {\n            // parse good response into constants for current state\n            _this.setState({\n              isMovie: json.isMovie,\n              id: json.id,\n              name: set.title,\n              description: set.desc,\n              rating: set.rate,\n              actors: set.act,\n              release_year: set.year\n            });\n          }\n        });\n      } else {\n        getVideoInfo(isMovie, episodeId).then(function (result) {\n          set = result;\n\n          if (set.hasOwnProperty(\"result\")) {\n            // result from server didnt pull the correct file and it doesnt exist!\n            console.log(\"file doesnt exist!\");\n          } else {\n            // parse good response into constants for current state\n            _this.setState({\n              isMovie: json.isMovie,\n              id: json.id,\n              name: set.title,\n              description: set.desc,\n              rating: set.rate,\n              actors: set.act,\n              release_year: set.year\n            });\n          }\n        });\n      }\n    });\n    return _this;\n  }\n\n  _createClass(PlayVideo, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          isMovie = _this$state.isMovie,\n          id = _this$state.id,\n          episodeId = _this$state.episodeId,\n          name = _this$state.name;\n      var loc = \"\";\n      var isSubscribed = false;\n      var isUserLoggedIn = false;\n\n      if (window.localStorage.getItem(\"Razzlers_Username\") != null) {\n        isUserLoggedIn = true;\n      }\n\n      if (id !== 0) {\n        if (isMovie === \"true\") {\n          var movieList = JSON.parse(localStorage.getItem(\"Razzlers_Subscribed_Movies\"));\n\n          if (movieList !== null) {\n            if (typeof movieList !== typeof 0) {\n              isSubscribed = movieList.includes(parseInt(id, 10));\n              loc = \"//assets.razzlers.me/assets/videos/movies/\" + id + \".mp4\";\n            }\n          }\n        } else {\n          var showList = JSON.parse(localStorage.getItem(\"Razzlers_Subscribed_Shows\"));\n\n          if (showList !== null) {\n            isSubscribed = showList.includes(parseInt(id, 10));\n            loc = \"//assets.razzlers.me/assets/videos/episodes/\" + episodeId + \".mp4\";\n          }\n        }\n      }\n\n      if (!isSubscribed) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"centerText\",\n          hidden: isSubscribed,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, React.createElement(\"font\", {\n          color: \"white\",\n          size: \"50\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, \"Subscribe to Watch Video\")), React.createElement(\"p\", {\n          className: \"centerText\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, React.createElement(\"font\", {\n          hidden: true,\n          id: \"capacityMessage\",\n          className: \"error\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, \"You have no more subscriptions left this month!\")), React.createElement(\"p\", {\n          className: \"centerText\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }, React.createElement(\"font\", {\n          hidden: true,\n          id: \"invalidMessage1\",\n          className: \"error\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, \"Subscription Failed, please try again!\")), React.createElement(\"p\", {\n          className: \"centerText\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, React.createElement(\"font\", {\n          hidden: true,\n          id: \"invalidMessage2\",\n          className: \"error\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, \"You must be logged in to subscribe!\")), React.createElement(\"button\", {\n          hidden: isSubscribed,\n          className: \"subButton\",\n          onClick: function onClick() {\n            if (isUserLoggedIn) {\n              subscribe(isMovie, id).then(function (result) {\n                console.log(\"result\"); // result is either true or false based on if subbing went correctly or note\n\n                if (result.result === \"true\") {\n                  // refresh page so they can watch the subbed show/movie\n                  window.location.reload();\n                } else if (result.result === \"full\") {\n                  // they are at capacity for subscriptions!\n                  document.getElementById(\"capacityMessage\").hidden = false;\n                } else {\n                  // subbing failed\n                  // display error message!\n                  document.getElementById(\"invalidMessage1\").hidden = false;\n                }\n              });\n            } else {\n              document.getElementById(\"invalidMessage2\").hidden = false;\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, \"Subscribe\"));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"centerTextWithBackLonger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          },\n          __self: this\n        }, React.createElement(\"font\", {\n          color: \"black\",\n          size: \"50\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          },\n          __self: this\n        }, name)), React.createElement(\"video\", {\n          className: \"center\",\n          width: \"720\",\n          height: \"480\",\n          controls: \"controls\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157\n          },\n          __self: this\n        }, React.createElement(\"source\", {\n          src: loc,\n          type: \"video/mp4\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158\n          },\n          __self: this\n        })));\n      }\n    }\n  }]);\n\n  return PlayVideo;\n}(React.Component); // checks the params in the URL\n\n\nfunction checkParams() {\n  return new Promise(function (resolve, reject) {\n    var url = window.location.href;\n    url = new URL(url);\n    var isMovie = url.searchParams.get(\"isMovie\");\n    var id = url.searchParams.get(\"id\");\n    var episodeId = url.searchParams.get(\"episode\");\n    resolve({\n      isMovie: isMovie,\n      id: id,\n      episodeId: episodeId\n    });\n  });\n}\n\nfunction getVideoInfo(isMovie, id) {\n  return new Promise(function (resolve, reject) {\n    var data = '{\"isMovie\": \"' + isMovie + '\", \"id\": \"' + id + '\"}';\n    data = JSON.parse(data);\n    var transport = {\n      headers: {\n        'Content-Type': \"application/json\"\n      },\n      method: \"PUT\",\n      body: JSON.stringify(data)\n    };\n    var url = \"http://razzlers.me:3001/api/getData/getVideoInfo\";\n    fetch(url, transport).then(function (result) {\n      return result.json();\n    }).then(function (json) {\n      resolve(json);\n    }).catch(function (err) {\n      throw new Error(err);\n    });\n  });\n}\n\nfunction subscribe(isMovie, id) {\n  return new Promise(function (resolve, reject) {\n    // resolves with object in format {result: true|false} which comes directly from server\n    var username = window.localStorage.getItem(\"Razzlers_Username\");\n    var data = '{\"username\": \"' + username + '\", \"isMovie\": \"' + isMovie + '\", \"id\": \"' + id + '\"}';\n    data = JSON.parse(data);\n    var transport = {\n      headers: {\n        'Content-Type': \"application/json\"\n      },\n      method: \"PUT\",\n      body: JSON.stringify(data)\n    };\n    var url = \"//razzlers.me:3001/api/getData/subscribeToShow\";\n    fetch(url, transport).then(function (result) {\n      return result.json();\n    }).then(function (json) {\n      utilFunc.updateLocalSubscribedLists().then(function (output) {\n        resolve(json);\n      });\n    }).catch(function (err) {\n      throw new Error(err);\n    });\n  });\n}\n\nexport default PlayVideo;","map":{"version":3,"sources":["D:\\RazzlersGithub\\client\\src\\pages\\PlayVideo.js"],"names":["React","utilFunc","require","PlayVideo","props","state","isMovie","id","episodeId","name","description","rating","actors","release_year","checkParams","then","json","setState","set","getVideoInfo","result","hasOwnProperty","console","log","title","desc","rate","act","year","loc","isSubscribed","isUserLoggedIn","window","localStorage","getItem","movieList","JSON","parse","includes","parseInt","showList","subscribe","location","reload","document","getElementById","hidden","Component","Promise","resolve","reject","url","href","URL","searchParams","get","data","transport","headers","method","body","stringify","fetch","catch","err","Error","username","updateLocalSubscribedLists","output"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport '../style.css';\r\n\r\nconst utilFunc = require('../Helpers/UtilityFunctions');\r\n\r\nclass PlayVideo extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tisMovie: false,\r\n\t\t\tid: 0,\r\n\t\t\tepisodeId: 0,\r\n\t\t\tname: \"\",\r\n\t\t\tdescription: \"\",\r\n\t\t\trating: 0,\r\n\t\t\tactors: \"\",\r\n\t\t\trelease_year: 0\r\n\t\t};\r\n\t\t\r\n\t\tcheckParams().then(json => {\r\n\t\t\tthis.setState({\r\n\t\t\t\tisMovie: json.isMovie,\r\n\t\t\t\tid: json.id,\r\n\t\t\t\tepisodeId: json.episodeId,\r\n\t\t\t\tname: \"\",\r\n\t\t\t\tdescription: \"\",\r\n\t\t\t\trating: 0,\r\n\t\t\t\tactors: \"\",\r\n\t\t\t\trelease_year: 0\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tvar isMovie = json.isMovie;\r\n\t\t\tvar id = json.id;\r\n\t\t\tvar episodeId = json.episodeId;\r\n\t\t\tvar set = {};\r\n\t\t\t\r\n\t\t\tif (isMovie === \"true\") {\r\n\t\t\t\tgetVideoInfo(isMovie, id).then(result => {\r\n\t\t\t\t\tset = result;\r\n\t\t\t\t\tif (set.hasOwnProperty(\"result\")) {\r\n\t\t\t\t\t\t// result from server didnt pull the correct file and it doesnt exist!\r\n\t\t\t\t\t\tconsole.log(\"file doesnt exist!\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t// parse good response into constants for current state\r\n\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\tisMovie: json.isMovie,\r\n\t\t\t\t\t\t\tid: json.id,\r\n\t\t\t\t\t\t\tname: set.title,\r\n\t\t\t\t\t\t\tdescription: set.desc,\r\n\t\t\t\t\t\t\trating: set.rate,\r\n\t\t\t\t\t\t\tactors: set.act,\r\n\t\t\t\t\t\t\trelease_year: set.year\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tgetVideoInfo(isMovie, episodeId).then(result => {\r\n\t\t\t\t\tset = result;\r\n\t\t\t\t\tif (set.hasOwnProperty(\"result\")) {\r\n\t\t\t\t\t\t// result from server didnt pull the correct file and it doesnt exist!\r\n\t\t\t\t\t\tconsole.log(\"file doesnt exist!\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t// parse good response into constants for current state\r\n\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\tisMovie: json.isMovie,\r\n\t\t\t\t\t\t\tid: json.id,\r\n\t\t\t\t\t\t\tname: set.title,\r\n\t\t\t\t\t\t\tdescription: set.desc,\r\n\t\t\t\t\t\t\trating: set.rate,\r\n\t\t\t\t\t\t\tactors: set.act,\r\n\t\t\t\t\t\t\trelease_year: set.year\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n\trender() {\r\n\t\tconst {isMovie, id, episodeId, name} = this.state;\r\n\t\tvar loc = \"\";\r\n\t\tvar isSubscribed = false;\r\n\t\tvar isUserLoggedIn = false;\r\n\t\tif (window.localStorage.getItem(\"Razzlers_Username\") != null) {\r\n\t\t\tisUserLoggedIn = true;\r\n\t\t}\r\n\t\t\r\n\t\tif (id !== 0) {\r\n\t\t\tif (isMovie === \"true\") {\r\n\t\t\t\tvar movieList = JSON.parse(localStorage.getItem(\"Razzlers_Subscribed_Movies\"));\r\n\t\t\t\tif (movieList !== null) {\r\n\t\t\t\t\tif (typeof movieList !== typeof 0) {\r\n\t\t\t\t\t\tisSubscribed = movieList.includes(parseInt(id, 10));\r\n\t\t\t\t\t\tloc = \"//assets.razzlers.me/assets/videos/movies/\" + id + \".mp4\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tvar showList = JSON.parse(localStorage.getItem(\"Razzlers_Subscribed_Shows\"));\r\n\t\t\t\tif (showList !== null) {\r\n\t\t\t\t\tisSubscribed = showList.includes(parseInt(id, 10));\r\n\t\t\t\t\tloc = \"//assets.razzlers.me/assets/videos/episodes/\" + episodeId + \".mp4\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif(!isSubscribed) {\r\n\t\t\treturn (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<p className=\"centerText\" hidden = {isSubscribed}><font color = \"white\" size = \"50\">Subscribe to Watch Video</font></p>\r\n\t\t\t\t\t<p className=\"centerText\">\r\n\t\t\t\t\t\t<font hidden id=\"capacityMessage\" className=\"error\">You have no more subscriptions left this month!</font>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p className=\"centerText\">\r\n\t\t\t\t\t\t<font hidden id=\"invalidMessage1\" className=\"error\">Subscription Failed, please try again!</font>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p className=\"centerText\">\r\n\t\t\t\t\t\t<font hidden id=\"invalidMessage2\" className=\"error\">You must be logged in to subscribe!</font>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<button hidden = {isSubscribed} className=\"subButton\" onClick = {() => {\r\n\t\t\t\t\t\tif(isUserLoggedIn) {\r\n\t\t\t\t\t\t\tsubscribe(isMovie, id).then(result => {\r\n\t\t\t\t\t\t\t\tconsole.log(\"result\");\r\n\t\t\t\t\t\t\t\t// result is either true or false based on if subbing went correctly or note\r\n\t\t\t\t\t\t\t\tif(result.result === \"true\") {\r\n\t\t\t\t\t\t\t\t\t// refresh page so they can watch the subbed show/movie\r\n\t\t\t\t\t\t\t\t\twindow.location.reload();\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse if(result.result === \"full\") {\r\n\t\t\t\t\t\t\t\t\t// they are at capacity for subscriptions!\r\n\t\t\t\t\t\t\t\t\tdocument.getElementById(\"capacityMessage\").hidden=false;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t// subbing failed\r\n\t\t\t\t\t\t\t\t\t// display error message!\r\n\t\t\t\t\t\t\t\t\tdocument.getElementById(\"invalidMessage1\").hidden=false;\r\n\t\t\t\t\t\t\t\t}\t\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tdocument.getElementById(\"invalidMessage2\").hidden=false;\t\r\n\t\t\t\t\t\t}\t\r\n\t\t\t\t\t}}>Subscribe</button>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t\t\r\n\t\telse {\r\n\t\t\treturn (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<p className=\"centerTextWithBackLonger\"><font color = \"black\" size = \"50\">{name}</font></p>\r\n\t\t\t\t\t<video className=\"center\" width=\"720\" height=\"480\" controls=\"controls\">\r\n\t\t\t\t\t\t<source src={loc} type=\"video/mp4\"/>\r\n\t\t\t\t\t</video>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// checks the params in the URL\r\nfunction checkParams() {\r\n\treturn new Promise(function(resolve, reject) {\r\n\t\tvar url = window.location.href;\r\n\t\turl = new URL(url);\r\n\t\tvar isMovie = url.searchParams.get(\"isMovie\");\r\n\t\tvar id = url.searchParams.get(\"id\");\r\n\t\tvar episodeId = url.searchParams.get(\"episode\");\r\n\t\tresolve({isMovie, id, episodeId});\r\n\t});\r\n}\r\n\r\nfunction getVideoInfo(isMovie, id) {\r\n\treturn new Promise(function(resolve, reject) {\r\n\t\tvar data = '{\"isMovie\": \"' + isMovie + '\", \"id\": \"' + id + '\"}';\r\n\t\tdata = JSON.parse(data);\r\n\t\tvar transport = {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': \"application/json\"\r\n\t\t\t},\r\n\t\t\tmethod: \"PUT\",\r\n\t\t\tbody: JSON.stringify(data)\r\n\t\t};\r\n\t\tconst url = \"http://razzlers.me:3001/api/getData/getVideoInfo\";\r\n\t\tfetch(url, transport).then(result => result.json()).then(json => {\r\n\t\t\tresolve(json);\r\n\t\t}).catch(err => {\r\n\t\t\tthrow new Error(err);\r\n\t\t});\r\n\t});\r\n}\r\n\r\nfunction subscribe(isMovie, id) {\r\n\treturn new Promise(function(resolve, reject) {\r\n\t\t// resolves with object in format {result: true|false} which comes directly from server\r\n\t\tvar username = window.localStorage.getItem(\"Razzlers_Username\");\r\n\t\tvar data = '{\"username\": \"' + username + '\", \"isMovie\": \"' + isMovie + '\", \"id\": \"' + id + '\"}';\r\n\t\tdata = JSON.parse(data);\r\n\t\tvar transport = {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': \"application/json\"\r\n\t\t\t},\r\n\t\t\tmethod: \"PUT\",\r\n\t\t\tbody: JSON.stringify(data)\r\n\t\t};\r\n\t\tconst url = \"//razzlers.me:3001/api/getData/subscribeToShow\";\r\n\t\tfetch(url, transport).then(result => result.json()).then(json => {\r\n\t\t\tutilFunc.updateLocalSubscribedLists().then(output => {\r\n\t\t\t\tresolve(json);\r\n\t\t\t});\r\n\t\t}).catch(err => {\r\n\t\t\tthrow new Error(err);\r\n\t\t});\r\n\t});\r\n}\r\n\r\nexport default PlayVideo"]},"metadata":{},"sourceType":"module"}