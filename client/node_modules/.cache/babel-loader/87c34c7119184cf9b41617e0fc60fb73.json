{"ast":null,"code":"import _classCallCheck from \"D:\\\\RazzlersGithub\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\RazzlersGithub\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\RazzlersGithub\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\RazzlersGithub\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\RazzlersGithub\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\RazzlersGithub\\\\client\\\\src\\\\HTMLComponents\\\\Login.js\";\nimport React from \"react\";\nimport '../style.css';\n\nvar Login =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Login, _React$Component);\n\n  function Login() {\n    _classCallCheck(this, Login);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Login).apply(this, arguments));\n  }\n\n  _createClass(Login, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 6\n        },\n        __self: this\n      }, React.createElement(\"font\", {\n        size: \"26\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 7\n        },\n        __self: this\n      }, \"Log In\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        className: \"input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        className: \"input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Login;\n}(React.Component); // checks if username and password are valid with backend server\n\n\nfunction loginVerification(inUsername, inPassword) {\n  var data = '{\"username\": \"' + inUsername + '\", \"password\": \"' + inPassword + '\"}';\n  data = JSON.parse(data);\n  var transport = {\n    headers: {\n      'Content-Type': \"application/json\"\n    },\n    method: \"POST\",\n    body: JSON.stringify(data)\n  };\n  var url = \"http://localhost:3001/api/getData/checkLogin\";\n  fetch(url, transport).then(function (response) {\n    return response.json();\n  }).then(function (json) {\n    var serverResponse = json.result;\n    console.log(serverResponse);\n\n    if (serverResponse === \"true\") {\n      localStorage.setItem(\"username\", inUsername);\n    } else {\n      // reject the user, tell invalid password try again\n      localStorage.setItem(\"username\", null);\n      return;\n    }\n  });\n}\n\nexport default Login;","map":{"version":3,"sources":["D:\\RazzlersGithub\\client\\src\\HTMLComponents\\Login.js"],"names":["React","Login","Component","loginVerification","inUsername","inPassword","data","JSON","parse","transport","headers","method","body","stringify","url","fetch","then","response","json","serverResponse","result","console","log","localStorage","setItem"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;;IACMC,K;;;;;;;;;;;;;6BACK;AACP,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,IAAI,EAAE,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,UAFd;AAGE,QAAA,SAAS,EAAC,OAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAFA,EAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,WAAW,EAAC,UAFd;AAGE,QAAA,SAAS,EAAC,OAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CARA,CADJ;AAiBD;;;;EAnBiBD,KAAK,CAACE,S,GAqB1B;;;AACA,SAASC,iBAAT,CAA2BC,UAA3B,EAAuCC,UAAvC,EACA;AACE,MAAIC,IAAI,GAAG,mBAAmBF,UAAnB,GAAgC,kBAAhC,GAAqDC,UAArD,GAAkE,IAA7E;AACAC,EAAAA,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWF,IAAX,CAAP;AACA,MAAIG,SAAS,GAAG;AACdC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KADK;AAIdC,IAAAA,MAAM,EAAE,MAJM;AAKdC,IAAAA,IAAI,EAAEL,IAAI,CAACM,SAAL,CAAeP,IAAf;AALQ,GAAhB;AAOA,MAAMQ,GAAG,GAAG,8CAAZ;AACAC,EAAAA,KAAK,CAACD,GAAD,EAAML,SAAN,CAAL,CAAsBO,IAAtB,CAA2B,UAAAC,QAAQ;AAAA,WAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,GAAnC,EAAwDF,IAAxD,CAA6D,UAAAE,IAAI,EAAI;AACnE,QAAIC,cAAc,GAAGD,IAAI,CAACE,MAA1B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,cAAZ;;AACA,QAAGA,cAAc,KAAK,MAAtB,EACA;AACEI,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCpB,UAAjC;AACD,KAHD,MAGO;AACL;AACAmB,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiC,IAAjC;AACA;AACD;AACF,GAXD;AAYD;;AAED,eAAevB,KAAf","sourcesContent":["import React from \"react\";\r\nimport '../style.css';\r\nclass Login extends React.Component {\r\n  render() {\r\n    return (\r\n        <div>\r\n          <font size= \"26\">Log In</font>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Username\"\r\n            className=\"input\"/>\r\n        </div>\r\n        <div>\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            className=\"input\"/>\r\n        </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n// checks if username and password are valid with backend server\r\nfunction loginVerification(inUsername, inPassword)\r\n{\r\n  var data = '{\"username\": \"' + inUsername + '\", \"password\": \"' + inPassword + '\"}';\r\n  data = JSON.parse(data);\r\n  var transport = {\r\n    headers: {\r\n      'Content-Type': \"application/json\"\r\n    },\r\n    method: \"POST\",\r\n    body: JSON.stringify(data)\r\n  };\r\n  const url = \"http://localhost:3001/api/getData/checkLogin\";\r\n  fetch(url, transport).then(response => response.json()).then(json => {\r\n    var serverResponse = json.result;\r\n    console.log(serverResponse);\r\n    if(serverResponse === \"true\")\r\n    {\r\n      localStorage.setItem(\"username\", inUsername);\r\n    } else {\r\n      // reject the user, tell invalid password try again\r\n      localStorage.setItem(\"username\", null);\r\n      return;\r\n    }\r\n  });\r\n}\r\n\r\nexport default Login\r\n"]},"metadata":{},"sourceType":"module"}